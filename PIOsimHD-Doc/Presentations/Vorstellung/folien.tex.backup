\documentclass{beamer}
%\documentclass[notes=show]{beamer}

\usepackage[utf8]{inputenc}
\usepackage[german]{babel}
\usepackage{rotating}

\usepackage{german, latexsym}
\usepackage{floatflt}
\usepackage{graphicx}
%\definecolor{lightblue}{rgb}{0.8,0.9,1.0}
%\usetheme{PaloAlto}
%\usetheme{Darmstadt}
\usetheme{Frankfurt}

%\usecolortheme{crane}
%\usecolortheme{lily}

\usepackage{pgf,pgfarrows,pgfnodes,pgfautomata,pgfheaps}
\usepackage{amsmath,amssymb}

\setbeamercovered{dynamic}


%notes:
\setbeamertemplate{note page}[plain] 
%compressed

\title[]{  PIOsimHD }
\author{ \underline{Julian M. Kunkel} } %Research Group:
\institute{ Institute for Computer Science \\  Parallel and Distributed Systems \\ Ruprecht-Karls-Universit\"at Heidelberg}
\date{  18.11.2008 }
\beamertemplatetransparentcovereddynamic
\setbeamerfont{note page}{size=\small}
%\setbeamersize{text margin left=0.1cm,text margin right=0.1cm}
%\renewcommand{\>}{\rangle}
%\newcommand{\<}{\langle} 
%\usebeamercolor[fg]{[page number]}

\setbeamertemplate{navigation symbols}{}
%\setbeamertemplate{note page}{}

\setbeamersize{text margin left=0.2cm}
\setbeamersize{text margin right=0.2cm}
\setbeamersize{sidebar width right=0cm}
\setbeamersize{sidebar width left=0cm}

\setbeamertemplate{footline}
{
\begin{beamercolorbox}{title}
\hspace*{0.2cm}
% \copyright 
Julian M. Kunkel 
\hfill
 \insertslidenavigationsymbol
 \insertframenavigationsymbol
 \insertsubsectionnavigationsymbol
 \insertsectionnavigationsymbol
 \insertdocnavigationsymbol
 \insertbackfindforwardnavigationsymbol
 \hfill\insertframenumber/\inserttotalframenumber
 \hspace*{0.2cm}
\end{beamercolorbox}
}

%\newcommand{\markNote}[1]{	\textsuperscript{\tiny [#1]} }
\newcommand{\markNote}[1]{	 }

\AtBeginSection[]{
	%\frame{
      %\frametitle{Outline}
	%\tableofcontents[current,hideallsubsections]
%	}
}

\begin{document}
\frame{
	\titlepage
}


\section{Ziele}
\frame{
	\frametitle{Ziele}
	\begin{itemize}
	 \item MPI \& MPI-IO Simulierbar
	 \item Einsatz/Nutzbarmachung von Standard-Tools zur Analyse der Ausgabe
	 \item Validierung ist wichtig (Glaubwürdigkeit des Simulators)
	 \item Skalierbarkeit (bedingt realisierbar, sequentieller Simulator)
	 \item Neue Algorithmen/Verhalten schnell und reproduzierbar testen
	 \item (Varianten der einzelnen Funktionsimplementierungen auswählbar)
	 \item Was wäre wenn der Supercomputer (oder das Cluster) diese und jene Hardware hätte?
	 \item Wie ist die Last-Balancierung? Welchen Sequenziellen Anteil hat die Anwendung?
	\end{itemize}
}

\section{Komponenten}
\frame{
	\frametitle{Komponenten}
	\begin{itemize}
 	 \item GUI um die Komponenten zu spezifizieren
	 \item Simulator-Kern (Java), nimmt Komponenten-Spezifikation und mapped eine oder mehrere Applikation-Spezifikationen hinzu.
	 \item PMPI-Wrapper erzeugt Eingabedatei/Trace von realen Programmläufen für den Simulator
	 \item Benchmark-Tool erzeugt Konfiguration für Komponenten Spezifikation (erste Überlegungen)
	 \item Tau-Trace-Generator - Konvertierung für \texttt{Jumpshot} möglich, profiling mit \texttt{paraprof} möglich
	 \item Integration in Scalalsca, (Cube3) wäre möglich um Expertensystem zur Analyse zu nutzen (Late-Sender)
	\end{itemize}
}

\section{Status}
\frame{
	\frametitle{Status}
	\begin{itemize}
	 \item Simulator-Kern simuliert Client Operationen mit wählbaren Varianten:
	 	\begin{itemize}
	 	\item Rechnen(Zyklen)
	 	\item Send/Receive (Tags, Wildcards) mit Eager + Rendevous Protokoll
	 	\item Barrier (Virtual)
	 	\item Allreduce (Virtual, One-Gather-Scatter, Binary-tree)
	 	\item File-Write/Read (PVFS-like)
	 	\item Weitere schnell implementierbar (Werden in Schritte zerlegt, vgl. simpler Endlicher-Automat)...
	 	\end{itemize}
	 \item Switchtopologie möglich (im Moment nur eine Route).
	 \item Server simuliert I/O-Read und Write
	 \begin{itemize}
	 	\item Mit simplem Write-Behind, verwaltet Cachespeicher und gibt diesen sofort wieder frei.
	 	\item (Hier gibts noch viel zu tun)
	 \end{itemize}
	\end{itemize}
}


\frame{
	\frametitle{Status (2)}
	\begin{itemize}
	 \item GUI erlaubt Komponenten zu platzieren, Eigenschaften auszuwählen (Praktikum)
	 \item Simulator erstellt für Client-Operationen TAU-Trace
	 \item Experimenteller PMPI Wrapper erstellt für wichtigste MPI-Funktionen XML-Trace Datei
	 \item Benchmark bestimmt Latency für Netzwerk und ermittelt Zeiten für Allreduce, Barrier und Max-Größe der Nachricht für Eager-Protokoll (Validierung)
	 \end{itemize}
}

\frame{
	\begin{itemize}
	 \item Modellierte Komponenten erklären, XML zeigen 
	 \item Modellierung von Programm zeigen.
	 \item PMPI Wrapper (kurz)
	 \item Details zur Simulation: Wie werden Komponenten simuliert. Wie werden Netzwerke trotz Latenzvariation ausgenutzt?
	\end{itemize}
}

\frame{
	\begin{itemize}
	 \item Jumpshot Demo :-)
	\end{itemize}
}

\end{document}
