# This Makefile.in created by simplemake.  Do not edit

# @configure_input@

# --------------------------------------------------------------------------
all: all-redirect

SHELL           = @SHELL@
VERBOSE         = 1
AR              = @AR@
RANLIB          = @RANLIB@
master_top_srcdir  = @master_top_srcdir@
top_builddir    = @master_top_builddir@
abs_builddir    = @abs_builddir@
srcdir          = @srcdir@
abs_srcdir      = @abs_srcdir@
top_srcdir      = @top_srcdir@
DEFS            = @DEFS@ -I. -I${srcdir}
CPPFLAGS        = @CPPFLAGS@
MAKE            = @MAKE@
MPILIBNAME      = @MPILIBNAME@
PMPILIBNAME     = @PMPILIBNAME@

CC              = @CC@
CFLAGS          = @CFLAGS@
C_COMPILE       = $(CC) $(DEFS) $(INCLUDES) $(CFLAGS) $(CPPFLAGS)
LIBTOOL         = @LIBTOOL@
CC_SHL          = @CC_SHL@
C_COMPILE_SHL   = $(CC_SHL) $(DEFS) $(INCLUDES) $(CFLAGS) $(CPPFLAGS)

VPATH = .:@srcdir@
DOCTEXT         = @DOCTEXT@
mpi_sources = cart_coords.c cart_create.c cart_get.c \
 cart_map.c cart_rank.c cart_shift.c cart_sub.c dims_create.c graph_get.c \
 graph_map.c graph_nbr.c graphcreate.c graphdimsget.c graphnbrcnt.c \
 cartdim_get.c topo_test.c
HEADERS = topo.h
INCLUDES = -I../../include -I${top_srcdir}/src/include

.SUFFIXES:
.SUFFIXES: .o .lo .c .man .html .latex .txt 
.c.o:
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC              $<" ; \
	else \
	  echo $(C_COMPILE) -c $< ; \
	fi
	@$(C_COMPILE) -c $<
.c.lo:
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC              $<" ; \
	else \
	  echo $(C_COMPILE_SHL) -c $< -o _s$*.o ; \
	echo mv -f _s$*.o $*.lo ; \
	fi
	@$(C_COMPILE_SHL) -c $< -o _s$*.o
	@mv -f _s$*.o $*.lo
.c.txt:
	$(CPP) $(INCLUDES) $(CPPFLAGS) $< >$*.txt
.c:
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC              $<" ; \
	else \
	  echo $(C_COMPILE) -o $* $< $(LDFLAGS) $(LIBS) ; \
	fi
	@$(C_COMPILE) -o $* $< $(LDFLAGS) $(LIBS)
.c.man:
	$(DOCTEXT) -man -mpath ../../../man/man3 -ext 3 -heading MPI \
		-quotefmt ${master_top_srcdir}/maint/docnotes $<
.c.html:
	$(DOCTEXT) -html -mpath ../../../www/www3  -heading MPI \
		-quotefmt ${master_top_srcdir}/maint/docnotes $<
.c.latex:
	$(DOCTEXT) -latex -mpath ../../../doc/refman  -heading MPI \
		-quotefmt ${master_top_srcdir}/maint/docnotes $<

# --------------------------------------------------------------------------
${srcdir}/Makefile.in: ${srcdir}/Makefile.sm
	( cd ${srcdir} && ${master_top_srcdir}/maint/simplemake \
	-rootdir=../../../ \
	-configdir=. \
	-common=${master_top_srcdir}/maint/makedefs \
	-docnamedefs=${master_top_srcdir}/maint/docnotes \
	"-autoconf=-I ROOTDIR/confdb" \
	-libdir='$${MPILIBNAME}=ROOTDIR/lib' \
	-smroot=${master_top_srcdir}/maint \
	-distcleanfiles="Makefile" \
	-smvar_doc_attop=0 \
		Makefile.sm )
Makefile: ${srcdir}/Makefile.in
	-cd ../../../ && \
	if [ -x config.status ] ; then CONFIG_FILES=src/mpi/topo/Makefile CONFIG_HEADERS= ${SHELL} ./config.status ; fi
# --------------------------------------------------------------------------
apply: 
	$(ACTION) $(ACTION_INPUT)
clean: 
	-@rm -f *.o ${srcdir}/*.o 
	-@rm -f .libstamp0 .libstamp1 .libstamp2 .libstamp3 
	-@rm -f *.lo ${srcdir}/*.lo
	-@rm -f ${srcdir}/*.bb ${srcdir}/*.bbg ${srcdir}/*.da
	-@rm -f ${srcdir}/*.gcda ${srcdir}/*.gcno
	-@rm -f *.gcov *.bb *.bbg *.da *.gcda *.gcno
distclean:  clean distclean-xxx remove-makefile
distclean-xxx:
	-@rm -f Makefile
	-@rm -rf autom4te*.cache
	-@rm -rf $(DEPS_DIR)
	-@rm -f TAGS
maintainer-clean:  distclean-xxx remove-genmakefiles
remove-makefile:
	rm -f Makefile
remove-genmakefiles:
	rm -f  Makefile.in Makefile
all-redirect: .libstamp0 ../../../lib/lib${MPILIBNAME}.a
	@if [ -n "@NO_WEAK_SYM@" ] ; then \
	    ${MAKE} .libstamp2 ; \
	fi
	@if [ "@ENABLE_SHLIB@" != "none" ] ; then \
	    ${MAKE} .libstamp1 ; \
	    if [ -n "@NO_WEAK_SYM@" ] ; then \
	        ${MAKE} .libstamp3 ; \
	    fi ; \
	fi

.libstamp0 ../../../lib/lib${MPILIBNAME}.a: cart_coords.o cart_create.o \
	cart_get.o cart_map.o cart_rank.o cart_shift.o cart_sub.o \
	dims_create.o graph_get.o graph_map.o graph_nbr.o graphcreate.o \
	graphdimsget.o graphnbrcnt.o cartdim_get.o topo_test.o topoutil.o 
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  AR cr ../../../lib/lib${MPILIBNAME}.a $?" ; \
	else \
	  echo ${AR} cr ../../../lib/lib${MPILIBNAME}.a $? ; \
	fi
	@${AR} cr ../../../lib/lib${MPILIBNAME}.a $?
	${RANLIB} ../../../lib/lib${MPILIBNAME}.a
	date > .libstamp0
.libstamp1 ../../../lib/lib${MPILIBNAME}.la: cart_coords.lo cart_create.lo \
	cart_get.lo cart_map.lo cart_rank.lo cart_shift.lo cart_sub.lo \
	dims_create.lo graph_get.lo graph_map.lo graph_nbr.lo graphcreate.lo \
	graphdimsget.lo graphnbrcnt.lo cartdim_get.lo topo_test.lo \
	topoutil.lo 
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  AR cr ../../../lib/lib${MPILIBNAME}.la $?" ; \
	else \
	  echo ${AR} cr ../../../lib/lib${MPILIBNAME}.la $? ; \
	fi
	@${AR} cr ../../../lib/lib${MPILIBNAME}.la $?
	date > .libstamp1

# --------------------------------------------------------------------------
.libstamp2: _cart_coords.o _cart_create.o _cart_get.o _cart_map.o _cart_rank.o \
	_cart_shift.o _cart_sub.o _dims_create.o _graph_get.o _graph_map.o \
	_graph_nbr.o _graphcreate.o _graphdimsget.o _graphnbrcnt.o \
	_cartdim_get.o _topo_test.o 
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  AR cr ../../../lib/lib${PMPILIBNAME}.a $?" ; \
	else \
	  echo ${AR} cr ../../../lib/lib${PMPILIBNAME}.a $? ; \
	fi
	@${AR} cr ../../../lib/lib${PMPILIBNAME}.a $?
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  RANLIB          lib${PMPILIBNAME}.a" ; \
	else \
	  echo ${RANLIB} ../../../lib/lib${PMPILIBNAME}.a ; \
	fi
	@${RANLIB} ../../../lib/lib${PMPILIBNAME}.a
	date > .libstamp2
.libstamp3: _cart_coords.lo _cart_create.lo _cart_get.lo _cart_map.lo _cart_rank.lo \
	_cart_shift.lo _cart_sub.lo _dims_create.lo _graph_get.lo \
	_graph_map.lo _graph_nbr.lo _graphcreate.lo _graphdimsget.lo \
	_graphnbrcnt.lo _cartdim_get.lo _topo_test.lo 
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  AR cr ../../../lib/lib${PMPILIBNAME}.la $?" ; \
	else \
	  echo ${AR} cr ../../../lib/lib${PMPILIBNAME}.la $?; \
	fi
	@${AR} cr ../../../lib/lib${PMPILIBNAME}.la $?
	date > .libstamp3
_cart_coords.o: cart_coords.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC              ${srcdir}/cart_coords.c" ; \
	else \
	  echo $(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/cart_coords.c -o _cart_coords.o ; \
	fi
	@$(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/cart_coords.c -o _cart_coords.o
_cart_coords.lo: cart_coords.c
	$(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/cart_coords.c -o _cart_coords.lo
_cart_create.o: cart_create.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC              ${srcdir}/cart_create.c" ; \
	else \
	  echo $(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/cart_create.c -o _cart_create.o ; \
	fi
	@$(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/cart_create.c -o _cart_create.o
_cart_create.lo: cart_create.c
	$(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/cart_create.c -o _cart_create.lo
_cart_get.o: cart_get.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC              ${srcdir}/cart_get.c" ; \
	else \
	  echo $(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/cart_get.c -o _cart_get.o ; \
	fi
	@$(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/cart_get.c -o _cart_get.o
_cart_get.lo: cart_get.c
	$(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/cart_get.c -o _cart_get.lo
_cart_map.o: cart_map.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC              ${srcdir}/cart_map.c" ; \
	else \
	  echo $(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/cart_map.c -o _cart_map.o ; \
	fi
	@$(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/cart_map.c -o _cart_map.o
_cart_map.lo: cart_map.c
	$(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/cart_map.c -o _cart_map.lo
_cart_rank.o: cart_rank.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC              ${srcdir}/cart_rank.c" ; \
	else \
	  echo $(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/cart_rank.c -o _cart_rank.o ; \
	fi
	@$(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/cart_rank.c -o _cart_rank.o
_cart_rank.lo: cart_rank.c
	$(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/cart_rank.c -o _cart_rank.lo
_cart_shift.o: cart_shift.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC              ${srcdir}/cart_shift.c" ; \
	else \
	  echo $(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/cart_shift.c -o _cart_shift.o ; \
	fi
	@$(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/cart_shift.c -o _cart_shift.o
_cart_shift.lo: cart_shift.c
	$(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/cart_shift.c -o _cart_shift.lo
_cart_sub.o: cart_sub.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC              ${srcdir}/cart_sub.c" ; \
	else \
	  echo $(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/cart_sub.c -o _cart_sub.o ; \
	fi
	@$(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/cart_sub.c -o _cart_sub.o
_cart_sub.lo: cart_sub.c
	$(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/cart_sub.c -o _cart_sub.lo
_dims_create.o: dims_create.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC              ${srcdir}/dims_create.c" ; \
	else \
	  echo $(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/dims_create.c -o _dims_create.o ; \
	fi
	@$(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/dims_create.c -o _dims_create.o
_dims_create.lo: dims_create.c
	$(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/dims_create.c -o _dims_create.lo
_graph_get.o: graph_get.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC              ${srcdir}/graph_get.c" ; \
	else \
	  echo $(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/graph_get.c -o _graph_get.o ; \
	fi
	@$(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/graph_get.c -o _graph_get.o
_graph_get.lo: graph_get.c
	$(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/graph_get.c -o _graph_get.lo
_graph_map.o: graph_map.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC              ${srcdir}/graph_map.c" ; \
	else \
	  echo $(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/graph_map.c -o _graph_map.o ; \
	fi
	@$(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/graph_map.c -o _graph_map.o
_graph_map.lo: graph_map.c
	$(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/graph_map.c -o _graph_map.lo
_graph_nbr.o: graph_nbr.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC              ${srcdir}/graph_nbr.c" ; \
	else \
	  echo $(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/graph_nbr.c -o _graph_nbr.o ; \
	fi
	@$(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/graph_nbr.c -o _graph_nbr.o
_graph_nbr.lo: graph_nbr.c
	$(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/graph_nbr.c -o _graph_nbr.lo
_graphcreate.o: graphcreate.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC              ${srcdir}/graphcreate.c" ; \
	else \
	  echo $(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/graphcreate.c -o _graphcreate.o ; \
	fi
	@$(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/graphcreate.c -o _graphcreate.o
_graphcreate.lo: graphcreate.c
	$(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/graphcreate.c -o _graphcreate.lo
_graphdimsget.o: graphdimsget.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC              ${srcdir}/graphdimsget.c" ; \
	else \
	  echo $(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/graphdimsget.c -o _graphdimsget.o ; \
	fi
	@$(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/graphdimsget.c -o _graphdimsget.o
_graphdimsget.lo: graphdimsget.c
	$(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/graphdimsget.c -o _graphdimsget.lo
_graphnbrcnt.o: graphnbrcnt.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC              ${srcdir}/graphnbrcnt.c" ; \
	else \
	  echo $(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/graphnbrcnt.c -o _graphnbrcnt.o ; \
	fi
	@$(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/graphnbrcnt.c -o _graphnbrcnt.o
_graphnbrcnt.lo: graphnbrcnt.c
	$(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/graphnbrcnt.c -o _graphnbrcnt.lo
_cartdim_get.o: cartdim_get.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC              ${srcdir}/cartdim_get.c" ; \
	else \
	  echo $(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/cartdim_get.c -o _cartdim_get.o ; \
	fi
	@$(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/cartdim_get.c -o _cartdim_get.o
_cartdim_get.lo: cartdim_get.c
	$(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/cartdim_get.c -o _cartdim_get.lo
_topo_test.o: topo_test.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC              ${srcdir}/topo_test.c" ; \
	else \
	  echo $(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/topo_test.c -o _topo_test.o ; \
	fi
	@$(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/topo_test.c -o _topo_test.o
_topo_test.lo: topo_test.c
	$(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/topo_test.c -o _topo_test.lo
# --------------------------------------------------------------------------
coverage: 
	-@for file in ${mpi_sources} topoutil.c ; do \
		gcov -b -f $$file ; done
# --------------------------------------------------------------------------
mandoc: ${mpi_sources:.c=.man}
htmldoc: ${mpi_sources:.c=.html}
latexdoc: ${mpi_sources:.c=.latex}
# --------------------------------------------------------------------------
# --------------------------------------------------------------------------
# --------------------------------------------------------------------------
# --------------------------------------------------------------------------
# Dependencies
DEPS_DIR = .deps
MAKE_DEPEND_C   = @MAKE_DEPEND_C@ $(DEFS) $(INCLUDES) $(CPPFLAGS)

dependencies: $(DEPS_DIR)/timestamp
$(DEPS_DIR)/cart_coords.d: $(srcdir)/cart_coords.c
	$(MAKE_DEPEND_C) -MT '_cart_coords.o cart_coords.o' $(srcdir)/cart_coords.c >$(DEPS_DIR)/cart_coords.d
$(DEPS_DIR)/cart_create.d: $(srcdir)/cart_create.c
	$(MAKE_DEPEND_C) -MT '_cart_create.o cart_create.o' $(srcdir)/cart_create.c >$(DEPS_DIR)/cart_create.d
$(DEPS_DIR)/cart_get.d: $(srcdir)/cart_get.c
	$(MAKE_DEPEND_C) -MT '_cart_get.o cart_get.o' $(srcdir)/cart_get.c >$(DEPS_DIR)/cart_get.d
$(DEPS_DIR)/cart_map.d: $(srcdir)/cart_map.c
	$(MAKE_DEPEND_C) -MT '_cart_map.o cart_map.o' $(srcdir)/cart_map.c >$(DEPS_DIR)/cart_map.d
$(DEPS_DIR)/cart_rank.d: $(srcdir)/cart_rank.c
	$(MAKE_DEPEND_C) -MT '_cart_rank.o cart_rank.o' $(srcdir)/cart_rank.c >$(DEPS_DIR)/cart_rank.d
$(DEPS_DIR)/cart_shift.d: $(srcdir)/cart_shift.c
	$(MAKE_DEPEND_C) -MT '_cart_shift.o cart_shift.o' $(srcdir)/cart_shift.c >$(DEPS_DIR)/cart_shift.d
$(DEPS_DIR)/cart_sub.d: $(srcdir)/cart_sub.c
	$(MAKE_DEPEND_C) -MT '_cart_sub.o cart_sub.o' $(srcdir)/cart_sub.c >$(DEPS_DIR)/cart_sub.d
$(DEPS_DIR)/dims_create.d: $(srcdir)/dims_create.c
	$(MAKE_DEPEND_C) -MT '_dims_create.o dims_create.o' $(srcdir)/dims_create.c >$(DEPS_DIR)/dims_create.d
$(DEPS_DIR)/graph_get.d: $(srcdir)/graph_get.c
	$(MAKE_DEPEND_C) -MT '_graph_get.o graph_get.o' $(srcdir)/graph_get.c >$(DEPS_DIR)/graph_get.d
$(DEPS_DIR)/graph_map.d: $(srcdir)/graph_map.c
	$(MAKE_DEPEND_C) -MT '_graph_map.o graph_map.o' $(srcdir)/graph_map.c >$(DEPS_DIR)/graph_map.d
$(DEPS_DIR)/graph_nbr.d: $(srcdir)/graph_nbr.c
	$(MAKE_DEPEND_C) -MT '_graph_nbr.o graph_nbr.o' $(srcdir)/graph_nbr.c >$(DEPS_DIR)/graph_nbr.d
$(DEPS_DIR)/graphcreate.d: $(srcdir)/graphcreate.c
	$(MAKE_DEPEND_C) -MT '_graphcreate.o graphcreate.o' $(srcdir)/graphcreate.c >$(DEPS_DIR)/graphcreate.d
$(DEPS_DIR)/graphdimsget.d: $(srcdir)/graphdimsget.c
	$(MAKE_DEPEND_C) -MT '_graphdimsget.o graphdimsget.o' $(srcdir)/graphdimsget.c >$(DEPS_DIR)/graphdimsget.d
$(DEPS_DIR)/graphnbrcnt.d: $(srcdir)/graphnbrcnt.c
	$(MAKE_DEPEND_C) -MT '_graphnbrcnt.o graphnbrcnt.o' $(srcdir)/graphnbrcnt.c >$(DEPS_DIR)/graphnbrcnt.d
$(DEPS_DIR)/cartdim_get.d: $(srcdir)/cartdim_get.c
	$(MAKE_DEPEND_C) -MT '_cartdim_get.o cartdim_get.o' $(srcdir)/cartdim_get.c >$(DEPS_DIR)/cartdim_get.d
$(DEPS_DIR)/topo_test.d: $(srcdir)/topo_test.c
	$(MAKE_DEPEND_C) -MT '_topo_test.o topo_test.o' $(srcdir)/topo_test.c >$(DEPS_DIR)/topo_test.d
$(DEPS_DIR)/topoutil.d: $(srcdir)/topoutil.c
	$(MAKE_DEPEND_C) -MT '_topoutil.o topoutil.o' $(srcdir)/topoutil.c >$(DEPS_DIR)/topoutil.d
$(DEPS_DIR)/timestamp: ${mpi_sources} topoutil.c Makefile
	rm -f $(DEPS_DIR)/newalldeps
	$(MAKE_DEPEND_C) -MT '_cart_coords.o cart_coords.o' $(srcdir)/cart_coords.c >$(DEPS_DIR)/cart_coords.d
	echo "include $(DEPS_DIR)/cart_coords.d" >>$(DEPS_DIR)/newalldeps
	$(MAKE_DEPEND_C) -MT '_cart_create.o cart_create.o' $(srcdir)/cart_create.c >$(DEPS_DIR)/cart_create.d
	echo "include $(DEPS_DIR)/cart_create.d" >>$(DEPS_DIR)/newalldeps
	$(MAKE_DEPEND_C) -MT '_cart_get.o cart_get.o' $(srcdir)/cart_get.c >$(DEPS_DIR)/cart_get.d
	echo "include $(DEPS_DIR)/cart_get.d" >>$(DEPS_DIR)/newalldeps
	$(MAKE_DEPEND_C) -MT '_cart_map.o cart_map.o' $(srcdir)/cart_map.c >$(DEPS_DIR)/cart_map.d
	echo "include $(DEPS_DIR)/cart_map.d" >>$(DEPS_DIR)/newalldeps
	$(MAKE_DEPEND_C) -MT '_cart_rank.o cart_rank.o' $(srcdir)/cart_rank.c >$(DEPS_DIR)/cart_rank.d
	echo "include $(DEPS_DIR)/cart_rank.d" >>$(DEPS_DIR)/newalldeps
	$(MAKE_DEPEND_C) -MT '_cart_shift.o cart_shift.o' $(srcdir)/cart_shift.c >$(DEPS_DIR)/cart_shift.d
	echo "include $(DEPS_DIR)/cart_shift.d" >>$(DEPS_DIR)/newalldeps
	$(MAKE_DEPEND_C) -MT '_cart_sub.o cart_sub.o' $(srcdir)/cart_sub.c >$(DEPS_DIR)/cart_sub.d
	echo "include $(DEPS_DIR)/cart_sub.d" >>$(DEPS_DIR)/newalldeps
	$(MAKE_DEPEND_C) -MT '_dims_create.o dims_create.o' $(srcdir)/dims_create.c >$(DEPS_DIR)/dims_create.d
	echo "include $(DEPS_DIR)/dims_create.d" >>$(DEPS_DIR)/newalldeps
	$(MAKE_DEPEND_C) -MT '_graph_get.o graph_get.o' $(srcdir)/graph_get.c >$(DEPS_DIR)/graph_get.d
	echo "include $(DEPS_DIR)/graph_get.d" >>$(DEPS_DIR)/newalldeps
	$(MAKE_DEPEND_C) -MT '_graph_map.o graph_map.o' $(srcdir)/graph_map.c >$(DEPS_DIR)/graph_map.d
	echo "include $(DEPS_DIR)/graph_map.d" >>$(DEPS_DIR)/newalldeps
	$(MAKE_DEPEND_C) -MT '_graph_nbr.o graph_nbr.o' $(srcdir)/graph_nbr.c >$(DEPS_DIR)/graph_nbr.d
	echo "include $(DEPS_DIR)/graph_nbr.d" >>$(DEPS_DIR)/newalldeps
	$(MAKE_DEPEND_C) -MT '_graphcreate.o graphcreate.o' $(srcdir)/graphcreate.c >$(DEPS_DIR)/graphcreate.d
	echo "include $(DEPS_DIR)/graphcreate.d" >>$(DEPS_DIR)/newalldeps
	$(MAKE_DEPEND_C) -MT '_graphdimsget.o graphdimsget.o' $(srcdir)/graphdimsget.c >$(DEPS_DIR)/graphdimsget.d
	echo "include $(DEPS_DIR)/graphdimsget.d" >>$(DEPS_DIR)/newalldeps
	$(MAKE_DEPEND_C) -MT '_graphnbrcnt.o graphnbrcnt.o' $(srcdir)/graphnbrcnt.c >$(DEPS_DIR)/graphnbrcnt.d
	echo "include $(DEPS_DIR)/graphnbrcnt.d" >>$(DEPS_DIR)/newalldeps
	$(MAKE_DEPEND_C) -MT '_cartdim_get.o cartdim_get.o' $(srcdir)/cartdim_get.c >$(DEPS_DIR)/cartdim_get.d
	echo "include $(DEPS_DIR)/cartdim_get.d" >>$(DEPS_DIR)/newalldeps
	$(MAKE_DEPEND_C) -MT '_topo_test.o topo_test.o' $(srcdir)/topo_test.c >$(DEPS_DIR)/topo_test.d
	echo "include $(DEPS_DIR)/topo_test.d" >>$(DEPS_DIR)/newalldeps
	$(MAKE_DEPEND_C) -MT '_topoutil.o topoutil.o' $(srcdir)/topoutil.c >$(DEPS_DIR)/topoutil.d
	echo "include $(DEPS_DIR)/topoutil.d" >>$(DEPS_DIR)/newalldeps
	if [ -s $(DEPS_DIR)/newalldeps ] ; then mv -f $(DEPS_DIR)/newalldeps $(DEPS_DIR)/alldeps ; fi
	date >$(DEPS_DIR)/timestamp
include $(DEPS_DIR)/alldeps
# End of Dependencies
# --------------------------------------------------------------------------
# --------------------------------------------------------------------------
SOURCES         =  cart_coords.c cart_create.c cart_get.c cart_map.c \
	cart_rank.c cart_shift.c cart_sub.c dims_create.c graph_get.c \
	graph_map.c graph_nbr.c graphcreate.c graphdimsget.c graphnbrcnt.c \
	cartdim_get.c topo_test.c topoutil.c 
ETAGS           = @ETAGS@ @ETAGSADD@
HEADERFILES     = $(HEADERS)
SOURCEFILES     = $(SOURCES)
tags: TAGS
TAGS: Makefile${HEADERFILES} ${SOURCEFILES}
	here=`cd ../../.. && pwd` ; cd ${srcdir} && $(ETAGS) -o $$here/TAGS --append ${HEADERFILES} ${SOURCEFILES}
# --------------------------------------------------------------------------


#

FORCE_TARGET:

