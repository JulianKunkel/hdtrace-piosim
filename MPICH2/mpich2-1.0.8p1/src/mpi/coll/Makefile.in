# This Makefile.in created by simplemake.  Do not edit

# @configure_input@

# --------------------------------------------------------------------------
all: all-redirect

SHELL           = @SHELL@
VERBOSE         = 1
AR              = @AR@
RANLIB          = @RANLIB@
master_top_srcdir  = @master_top_srcdir@
top_builddir    = @master_top_builddir@
abs_builddir    = @abs_builddir@
srcdir          = @srcdir@
abs_srcdir      = @abs_srcdir@
top_srcdir      = @top_srcdir@
DEFS            = @DEFS@ -I. -I${srcdir}
CPPFLAGS        = @CPPFLAGS@
MAKE            = @MAKE@
MPILIBNAME      = @MPILIBNAME@
PMPILIBNAME     = @PMPILIBNAME@

CC              = @CC@
CFLAGS          = @CFLAGS@
C_COMPILE       = $(CC) $(DEFS) $(INCLUDES) $(CFLAGS) $(CPPFLAGS)
LIBTOOL         = @LIBTOOL@
CC_SHL          = @CC_SHL@
C_COMPILE_SHL   = $(CC_SHL) $(DEFS) $(INCLUDES) $(CFLAGS) $(CPPFLAGS)

VPATH = .:@srcdir@
DOCTEXT         = @DOCTEXT@
mpi_sources = allreduce.c barrier.c op_create.c op_free.c \
 bcast.c alltoall.c alltoallv.c reduce.c scatter.c \
 gather.c scatterv.c gatherv.c scan.c exscan.c allgather.c allgatherv.c \
 red_scat.c alltoallw.c 
INCLUDES = -I../../include -I${top_srcdir}/src/include -I${top_srcdir}/src/mpi/datatype

.SUFFIXES:
.SUFFIXES: .o .lo .c .man .html .latex .txt 
.c.o:
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC              $<" ; \
	else \
	  echo $(C_COMPILE) -c $< ; \
	fi
	@$(C_COMPILE) -c $<
.c.lo:
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC              $<" ; \
	else \
	  echo $(C_COMPILE_SHL) -c $< -o _s$*.o ; \
	echo mv -f _s$*.o $*.lo ; \
	fi
	@$(C_COMPILE_SHL) -c $< -o _s$*.o
	@mv -f _s$*.o $*.lo
.c.txt:
	$(CPP) $(INCLUDES) $(CPPFLAGS) $< >$*.txt
.c:
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC              $<" ; \
	else \
	  echo $(C_COMPILE) -o $* $< $(LDFLAGS) $(LIBS) ; \
	fi
	@$(C_COMPILE) -o $* $< $(LDFLAGS) $(LIBS)
.c.man:
	$(DOCTEXT) -man -mpath ../../../man/man3 -ext 3 -heading MPI \
		-quotefmt ${master_top_srcdir}/maint/docnotes $<
.c.html:
	$(DOCTEXT) -html -mpath ../../../www/www3  -heading MPI \
		-quotefmt ${master_top_srcdir}/maint/docnotes $<
.c.latex:
	$(DOCTEXT) -latex -mpath ../../../doc/refman  -heading MPI \
		-quotefmt ${master_top_srcdir}/maint/docnotes $<

# --------------------------------------------------------------------------
${srcdir}/Makefile.in: ${srcdir}/Makefile.sm
	( cd ${srcdir} && ${master_top_srcdir}/maint/simplemake \
	-rootdir=../../../ \
	-configdir=. \
	-common=${master_top_srcdir}/maint/makedefs \
	-docnamedefs=${master_top_srcdir}/maint/docnotes \
	"-autoconf=-I ROOTDIR/confdb" \
	-libdir='$${MPILIBNAME}=ROOTDIR/lib' \
	-smroot=${master_top_srcdir}/maint \
	-distcleanfiles="Makefile" \
	-smvar_doc_attop=0 \
		Makefile.sm )
Makefile: ${srcdir}/Makefile.in
	-cd ../../../ && \
	if [ -x config.status ] ; then CONFIG_FILES=src/mpi/coll/Makefile CONFIG_HEADERS= ${SHELL} ./config.status ; fi
# --------------------------------------------------------------------------
apply: 
	$(ACTION) $(ACTION_INPUT)
clean: 
	-@rm -f *.o ${srcdir}/*.o 
	-@rm -f .libstamp0 .libstamp1 .libstamp2 .libstamp3 
	-@rm -f *.lo ${srcdir}/*.lo
	-@rm -f ${srcdir}/*.bb ${srcdir}/*.bbg ${srcdir}/*.da
	-@rm -f ${srcdir}/*.gcda ${srcdir}/*.gcno
	-@rm -f *.gcov *.bb *.bbg *.da *.gcda *.gcno
distclean:  clean distclean-xxx remove-makefile
distclean-xxx:
	-@rm -f Makefile
	-@rm -rf autom4te*.cache
	-@rm -rf $(DEPS_DIR)
	-@rm -f TAGS
maintainer-clean:  distclean-xxx remove-genmakefiles
remove-makefile:
	rm -f Makefile
remove-genmakefiles:
	rm -f  Makefile.in Makefile
all-redirect: .libstamp0 ../../../lib/lib${MPILIBNAME}.a
	@if [ -n "@NO_WEAK_SYM@" ] ; then \
	    ${MAKE} .libstamp2 ; \
	fi
	@if [ "@ENABLE_SHLIB@" != "none" ] ; then \
	    ${MAKE} .libstamp1 ; \
	    if [ -n "@NO_WEAK_SYM@" ] ; then \
	        ${MAKE} .libstamp3 ; \
	    fi ; \
	fi

.libstamp0 ../../../lib/lib${MPILIBNAME}.a: allreduce.o barrier.o op_create.o \
	op_free.o bcast.o alltoall.o alltoallv.o reduce.o scatter.o gather.o \
	scatterv.o gatherv.o scan.o exscan.o allgather.o allgatherv.o \
	red_scat.o alltoallw.o helper_fns.o opsum.o opmax.o opmin.o opband.o \
	opbor.o opbxor.o opland.o oplor.o oplxor.o opprod.o opminloc.o \
	opmaxloc.o 
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  AR cr ../../../lib/lib${MPILIBNAME}.a $?" ; \
	else \
	  echo ${AR} cr ../../../lib/lib${MPILIBNAME}.a $? ; \
	fi
	@${AR} cr ../../../lib/lib${MPILIBNAME}.a $?
	${RANLIB} ../../../lib/lib${MPILIBNAME}.a
	date > .libstamp0
.libstamp1 ../../../lib/lib${MPILIBNAME}.la: allreduce.lo barrier.lo \
	op_create.lo op_free.lo bcast.lo alltoall.lo alltoallv.lo reduce.lo \
	scatter.lo gather.lo scatterv.lo gatherv.lo scan.lo exscan.lo \
	allgather.lo allgatherv.lo red_scat.lo alltoallw.lo helper_fns.lo \
	opsum.lo opmax.lo opmin.lo opband.lo opbor.lo opbxor.lo opland.lo \
	oplor.lo oplxor.lo opprod.lo opminloc.lo opmaxloc.lo 
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  AR cr ../../../lib/lib${MPILIBNAME}.la $?" ; \
	else \
	  echo ${AR} cr ../../../lib/lib${MPILIBNAME}.la $? ; \
	fi
	@${AR} cr ../../../lib/lib${MPILIBNAME}.la $?
	date > .libstamp1

# --------------------------------------------------------------------------
.libstamp2: _allreduce.o _barrier.o _op_create.o _op_free.o _bcast.o _alltoall.o \
	_alltoallv.o _reduce.o _scatter.o _gather.o _scatterv.o _gatherv.o \
	_scan.o _exscan.o _allgather.o _allgatherv.o _red_scat.o _alltoallw.o 
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  AR cr ../../../lib/lib${PMPILIBNAME}.a $?" ; \
	else \
	  echo ${AR} cr ../../../lib/lib${PMPILIBNAME}.a $? ; \
	fi
	@${AR} cr ../../../lib/lib${PMPILIBNAME}.a $?
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  RANLIB          lib${PMPILIBNAME}.a" ; \
	else \
	  echo ${RANLIB} ../../../lib/lib${PMPILIBNAME}.a ; \
	fi
	@${RANLIB} ../../../lib/lib${PMPILIBNAME}.a
	date > .libstamp2
.libstamp3: _allreduce.lo _barrier.lo _op_create.lo _op_free.lo _bcast.lo _alltoall.lo \
	_alltoallv.lo _reduce.lo _scatter.lo _gather.lo _scatterv.lo \
	_gatherv.lo _scan.lo _exscan.lo _allgather.lo _allgatherv.lo \
	_red_scat.lo _alltoallw.lo 
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  AR cr ../../../lib/lib${PMPILIBNAME}.la $?" ; \
	else \
	  echo ${AR} cr ../../../lib/lib${PMPILIBNAME}.la $?; \
	fi
	@${AR} cr ../../../lib/lib${PMPILIBNAME}.la $?
	date > .libstamp3
_allreduce.o: allreduce.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC              ${srcdir}/allreduce.c" ; \
	else \
	  echo $(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/allreduce.c -o _allreduce.o ; \
	fi
	@$(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/allreduce.c -o _allreduce.o
_allreduce.lo: allreduce.c
	$(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/allreduce.c -o _allreduce.lo
_barrier.o: barrier.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC              ${srcdir}/barrier.c" ; \
	else \
	  echo $(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/barrier.c -o _barrier.o ; \
	fi
	@$(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/barrier.c -o _barrier.o
_barrier.lo: barrier.c
	$(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/barrier.c -o _barrier.lo
_op_create.o: op_create.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC              ${srcdir}/op_create.c" ; \
	else \
	  echo $(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/op_create.c -o _op_create.o ; \
	fi
	@$(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/op_create.c -o _op_create.o
_op_create.lo: op_create.c
	$(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/op_create.c -o _op_create.lo
_op_free.o: op_free.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC              ${srcdir}/op_free.c" ; \
	else \
	  echo $(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/op_free.c -o _op_free.o ; \
	fi
	@$(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/op_free.c -o _op_free.o
_op_free.lo: op_free.c
	$(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/op_free.c -o _op_free.lo
_bcast.o: bcast.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC              ${srcdir}/bcast.c" ; \
	else \
	  echo $(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/bcast.c -o _bcast.o ; \
	fi
	@$(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/bcast.c -o _bcast.o
_bcast.lo: bcast.c
	$(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/bcast.c -o _bcast.lo
_alltoall.o: alltoall.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC              ${srcdir}/alltoall.c" ; \
	else \
	  echo $(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/alltoall.c -o _alltoall.o ; \
	fi
	@$(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/alltoall.c -o _alltoall.o
_alltoall.lo: alltoall.c
	$(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/alltoall.c -o _alltoall.lo
_alltoallv.o: alltoallv.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC              ${srcdir}/alltoallv.c" ; \
	else \
	  echo $(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/alltoallv.c -o _alltoallv.o ; \
	fi
	@$(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/alltoallv.c -o _alltoallv.o
_alltoallv.lo: alltoallv.c
	$(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/alltoallv.c -o _alltoallv.lo
_reduce.o: reduce.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC              ${srcdir}/reduce.c" ; \
	else \
	  echo $(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/reduce.c -o _reduce.o ; \
	fi
	@$(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/reduce.c -o _reduce.o
_reduce.lo: reduce.c
	$(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/reduce.c -o _reduce.lo
_scatter.o: scatter.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC              ${srcdir}/scatter.c" ; \
	else \
	  echo $(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/scatter.c -o _scatter.o ; \
	fi
	@$(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/scatter.c -o _scatter.o
_scatter.lo: scatter.c
	$(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/scatter.c -o _scatter.lo
_gather.o: gather.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC              ${srcdir}/gather.c" ; \
	else \
	  echo $(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/gather.c -o _gather.o ; \
	fi
	@$(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/gather.c -o _gather.o
_gather.lo: gather.c
	$(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/gather.c -o _gather.lo
_scatterv.o: scatterv.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC              ${srcdir}/scatterv.c" ; \
	else \
	  echo $(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/scatterv.c -o _scatterv.o ; \
	fi
	@$(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/scatterv.c -o _scatterv.o
_scatterv.lo: scatterv.c
	$(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/scatterv.c -o _scatterv.lo
_gatherv.o: gatherv.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC              ${srcdir}/gatherv.c" ; \
	else \
	  echo $(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/gatherv.c -o _gatherv.o ; \
	fi
	@$(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/gatherv.c -o _gatherv.o
_gatherv.lo: gatherv.c
	$(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/gatherv.c -o _gatherv.lo
_scan.o: scan.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC              ${srcdir}/scan.c" ; \
	else \
	  echo $(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/scan.c -o _scan.o ; \
	fi
	@$(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/scan.c -o _scan.o
_scan.lo: scan.c
	$(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/scan.c -o _scan.lo
_exscan.o: exscan.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC              ${srcdir}/exscan.c" ; \
	else \
	  echo $(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/exscan.c -o _exscan.o ; \
	fi
	@$(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/exscan.c -o _exscan.o
_exscan.lo: exscan.c
	$(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/exscan.c -o _exscan.lo
_allgather.o: allgather.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC              ${srcdir}/allgather.c" ; \
	else \
	  echo $(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/allgather.c -o _allgather.o ; \
	fi
	@$(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/allgather.c -o _allgather.o
_allgather.lo: allgather.c
	$(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/allgather.c -o _allgather.lo
_allgatherv.o: allgatherv.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC              ${srcdir}/allgatherv.c" ; \
	else \
	  echo $(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/allgatherv.c -o _allgatherv.o ; \
	fi
	@$(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/allgatherv.c -o _allgatherv.o
_allgatherv.lo: allgatherv.c
	$(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/allgatherv.c -o _allgatherv.lo
_red_scat.o: red_scat.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC              ${srcdir}/red_scat.c" ; \
	else \
	  echo $(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/red_scat.c -o _red_scat.o ; \
	fi
	@$(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/red_scat.c -o _red_scat.o
_red_scat.lo: red_scat.c
	$(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/red_scat.c -o _red_scat.lo
_alltoallw.o: alltoallw.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC              ${srcdir}/alltoallw.c" ; \
	else \
	  echo $(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/alltoallw.c -o _alltoallw.o ; \
	fi
	@$(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/alltoallw.c -o _alltoallw.o
_alltoallw.lo: alltoallw.c
	$(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/alltoallw.c -o _alltoallw.lo
# --------------------------------------------------------------------------
coverage: 
	-@for file in $(mpi_sources)  helper_fns.c opsum.c opmax.c opmin.c opband.c \
	opbor.c opbxor.c  opland.c oplor.c oplxor.c opprod.c opminloc.c \
	opmaxloc.c ; do \
		gcov -b -f $$file ; done
# --------------------------------------------------------------------------
mandoc: ${mpi_sources:.c=.man}
htmldoc: ${mpi_sources:.c=.html}
latexdoc: ${mpi_sources:.c=.latex}
# --------------------------------------------------------------------------
# --------------------------------------------------------------------------
# --------------------------------------------------------------------------
# --------------------------------------------------------------------------
# Dependencies
DEPS_DIR = .deps
MAKE_DEPEND_C   = @MAKE_DEPEND_C@ $(DEFS) $(INCLUDES) $(CPPFLAGS)

dependencies: $(DEPS_DIR)/timestamp
$(DEPS_DIR)/allreduce.d: $(srcdir)/allreduce.c
	$(MAKE_DEPEND_C) -MT '_allreduce.o allreduce.o' $(srcdir)/allreduce.c >$(DEPS_DIR)/allreduce.d
$(DEPS_DIR)/barrier.d: $(srcdir)/barrier.c
	$(MAKE_DEPEND_C) -MT '_barrier.o barrier.o' $(srcdir)/barrier.c >$(DEPS_DIR)/barrier.d
$(DEPS_DIR)/op_create.d: $(srcdir)/op_create.c
	$(MAKE_DEPEND_C) -MT '_op_create.o op_create.o' $(srcdir)/op_create.c >$(DEPS_DIR)/op_create.d
$(DEPS_DIR)/op_free.d: $(srcdir)/op_free.c
	$(MAKE_DEPEND_C) -MT '_op_free.o op_free.o' $(srcdir)/op_free.c >$(DEPS_DIR)/op_free.d
$(DEPS_DIR)/bcast.d: $(srcdir)/bcast.c
	$(MAKE_DEPEND_C) -MT '_bcast.o bcast.o' $(srcdir)/bcast.c >$(DEPS_DIR)/bcast.d
$(DEPS_DIR)/alltoall.d: $(srcdir)/alltoall.c
	$(MAKE_DEPEND_C) -MT '_alltoall.o alltoall.o' $(srcdir)/alltoall.c >$(DEPS_DIR)/alltoall.d
$(DEPS_DIR)/alltoallv.d: $(srcdir)/alltoallv.c
	$(MAKE_DEPEND_C) -MT '_alltoallv.o alltoallv.o' $(srcdir)/alltoallv.c >$(DEPS_DIR)/alltoallv.d
$(DEPS_DIR)/reduce.d: $(srcdir)/reduce.c
	$(MAKE_DEPEND_C) -MT '_reduce.o reduce.o' $(srcdir)/reduce.c >$(DEPS_DIR)/reduce.d
$(DEPS_DIR)/scatter.d: $(srcdir)/scatter.c
	$(MAKE_DEPEND_C) -MT '_scatter.o scatter.o' $(srcdir)/scatter.c >$(DEPS_DIR)/scatter.d
$(DEPS_DIR)/gather.d: $(srcdir)/gather.c
	$(MAKE_DEPEND_C) -MT '_gather.o gather.o' $(srcdir)/gather.c >$(DEPS_DIR)/gather.d
$(DEPS_DIR)/scatterv.d: $(srcdir)/scatterv.c
	$(MAKE_DEPEND_C) -MT '_scatterv.o scatterv.o' $(srcdir)/scatterv.c >$(DEPS_DIR)/scatterv.d
$(DEPS_DIR)/gatherv.d: $(srcdir)/gatherv.c
	$(MAKE_DEPEND_C) -MT '_gatherv.o gatherv.o' $(srcdir)/gatherv.c >$(DEPS_DIR)/gatherv.d
$(DEPS_DIR)/scan.d: $(srcdir)/scan.c
	$(MAKE_DEPEND_C) -MT '_scan.o scan.o' $(srcdir)/scan.c >$(DEPS_DIR)/scan.d
$(DEPS_DIR)/exscan.d: $(srcdir)/exscan.c
	$(MAKE_DEPEND_C) -MT '_exscan.o exscan.o' $(srcdir)/exscan.c >$(DEPS_DIR)/exscan.d
$(DEPS_DIR)/allgather.d: $(srcdir)/allgather.c
	$(MAKE_DEPEND_C) -MT '_allgather.o allgather.o' $(srcdir)/allgather.c >$(DEPS_DIR)/allgather.d
$(DEPS_DIR)/allgatherv.d: $(srcdir)/allgatherv.c
	$(MAKE_DEPEND_C) -MT '_allgatherv.o allgatherv.o' $(srcdir)/allgatherv.c >$(DEPS_DIR)/allgatherv.d
$(DEPS_DIR)/red_scat.d: $(srcdir)/red_scat.c
	$(MAKE_DEPEND_C) -MT '_red_scat.o red_scat.o' $(srcdir)/red_scat.c >$(DEPS_DIR)/red_scat.d
$(DEPS_DIR)/alltoallw.d: $(srcdir)/alltoallw.c
	$(MAKE_DEPEND_C) -MT '_alltoallw.o alltoallw.o' $(srcdir)/alltoallw.c >$(DEPS_DIR)/alltoallw.d
$(DEPS_DIR)/helper_fns.d: $(srcdir)/helper_fns.c
	$(MAKE_DEPEND_C) -MT '_helper_fns.o helper_fns.o' $(srcdir)/helper_fns.c >$(DEPS_DIR)/helper_fns.d
$(DEPS_DIR)/opsum.d: $(srcdir)/opsum.c
	$(MAKE_DEPEND_C) -MT '_opsum.o opsum.o' $(srcdir)/opsum.c >$(DEPS_DIR)/opsum.d
$(DEPS_DIR)/opmax.d: $(srcdir)/opmax.c
	$(MAKE_DEPEND_C) -MT '_opmax.o opmax.o' $(srcdir)/opmax.c >$(DEPS_DIR)/opmax.d
$(DEPS_DIR)/opmin.d: $(srcdir)/opmin.c
	$(MAKE_DEPEND_C) -MT '_opmin.o opmin.o' $(srcdir)/opmin.c >$(DEPS_DIR)/opmin.d
$(DEPS_DIR)/opband.d: $(srcdir)/opband.c
	$(MAKE_DEPEND_C) -MT '_opband.o opband.o' $(srcdir)/opband.c >$(DEPS_DIR)/opband.d
$(DEPS_DIR)/opbor.d: $(srcdir)/opbor.c
	$(MAKE_DEPEND_C) -MT '_opbor.o opbor.o' $(srcdir)/opbor.c >$(DEPS_DIR)/opbor.d
$(DEPS_DIR)/opbxor.d: $(srcdir)/opbxor.c
	$(MAKE_DEPEND_C) -MT '_opbxor.o opbxor.o' $(srcdir)/opbxor.c >$(DEPS_DIR)/opbxor.d
$(DEPS_DIR)/opland.d: $(srcdir)/opland.c
	$(MAKE_DEPEND_C) -MT '_opland.o opland.o' $(srcdir)/opland.c >$(DEPS_DIR)/opland.d
$(DEPS_DIR)/oplor.d: $(srcdir)/oplor.c
	$(MAKE_DEPEND_C) -MT '_oplor.o oplor.o' $(srcdir)/oplor.c >$(DEPS_DIR)/oplor.d
$(DEPS_DIR)/oplxor.d: $(srcdir)/oplxor.c
	$(MAKE_DEPEND_C) -MT '_oplxor.o oplxor.o' $(srcdir)/oplxor.c >$(DEPS_DIR)/oplxor.d
$(DEPS_DIR)/opprod.d: $(srcdir)/opprod.c
	$(MAKE_DEPEND_C) -MT '_opprod.o opprod.o' $(srcdir)/opprod.c >$(DEPS_DIR)/opprod.d
$(DEPS_DIR)/opminloc.d: $(srcdir)/opminloc.c
	$(MAKE_DEPEND_C) -MT '_opminloc.o opminloc.o' $(srcdir)/opminloc.c >$(DEPS_DIR)/opminloc.d
$(DEPS_DIR)/opmaxloc.d: $(srcdir)/opmaxloc.c
	$(MAKE_DEPEND_C) -MT '_opmaxloc.o opmaxloc.o' $(srcdir)/opmaxloc.c >$(DEPS_DIR)/opmaxloc.d
$(DEPS_DIR)/timestamp: $(mpi_sources)  helper_fns.c opsum.c opmax.c opmin.c opband.c opbor.c \
	opbxor.c  opland.c oplor.c oplxor.c opprod.c opminloc.c opmaxloc.c \
	Makefile 
	rm -f $(DEPS_DIR)/newalldeps
	$(MAKE_DEPEND_C) -MT '_allreduce.o allreduce.o' $(srcdir)/allreduce.c >$(DEPS_DIR)/allreduce.d
	echo "include $(DEPS_DIR)/allreduce.d" >>$(DEPS_DIR)/newalldeps
	$(MAKE_DEPEND_C) -MT '_barrier.o barrier.o' $(srcdir)/barrier.c >$(DEPS_DIR)/barrier.d
	echo "include $(DEPS_DIR)/barrier.d" >>$(DEPS_DIR)/newalldeps
	$(MAKE_DEPEND_C) -MT '_op_create.o op_create.o' $(srcdir)/op_create.c >$(DEPS_DIR)/op_create.d
	echo "include $(DEPS_DIR)/op_create.d" >>$(DEPS_DIR)/newalldeps
	$(MAKE_DEPEND_C) -MT '_op_free.o op_free.o' $(srcdir)/op_free.c >$(DEPS_DIR)/op_free.d
	echo "include $(DEPS_DIR)/op_free.d" >>$(DEPS_DIR)/newalldeps
	$(MAKE_DEPEND_C) -MT '_bcast.o bcast.o' $(srcdir)/bcast.c >$(DEPS_DIR)/bcast.d
	echo "include $(DEPS_DIR)/bcast.d" >>$(DEPS_DIR)/newalldeps
	$(MAKE_DEPEND_C) -MT '_alltoall.o alltoall.o' $(srcdir)/alltoall.c >$(DEPS_DIR)/alltoall.d
	echo "include $(DEPS_DIR)/alltoall.d" >>$(DEPS_DIR)/newalldeps
	$(MAKE_DEPEND_C) -MT '_alltoallv.o alltoallv.o' $(srcdir)/alltoallv.c >$(DEPS_DIR)/alltoallv.d
	echo "include $(DEPS_DIR)/alltoallv.d" >>$(DEPS_DIR)/newalldeps
	$(MAKE_DEPEND_C) -MT '_reduce.o reduce.o' $(srcdir)/reduce.c >$(DEPS_DIR)/reduce.d
	echo "include $(DEPS_DIR)/reduce.d" >>$(DEPS_DIR)/newalldeps
	$(MAKE_DEPEND_C) -MT '_scatter.o scatter.o' $(srcdir)/scatter.c >$(DEPS_DIR)/scatter.d
	echo "include $(DEPS_DIR)/scatter.d" >>$(DEPS_DIR)/newalldeps
	$(MAKE_DEPEND_C) -MT '_gather.o gather.o' $(srcdir)/gather.c >$(DEPS_DIR)/gather.d
	echo "include $(DEPS_DIR)/gather.d" >>$(DEPS_DIR)/newalldeps
	$(MAKE_DEPEND_C) -MT '_scatterv.o scatterv.o' $(srcdir)/scatterv.c >$(DEPS_DIR)/scatterv.d
	echo "include $(DEPS_DIR)/scatterv.d" >>$(DEPS_DIR)/newalldeps
	$(MAKE_DEPEND_C) -MT '_gatherv.o gatherv.o' $(srcdir)/gatherv.c >$(DEPS_DIR)/gatherv.d
	echo "include $(DEPS_DIR)/gatherv.d" >>$(DEPS_DIR)/newalldeps
	$(MAKE_DEPEND_C) -MT '_scan.o scan.o' $(srcdir)/scan.c >$(DEPS_DIR)/scan.d
	echo "include $(DEPS_DIR)/scan.d" >>$(DEPS_DIR)/newalldeps
	$(MAKE_DEPEND_C) -MT '_exscan.o exscan.o' $(srcdir)/exscan.c >$(DEPS_DIR)/exscan.d
	echo "include $(DEPS_DIR)/exscan.d" >>$(DEPS_DIR)/newalldeps
	$(MAKE_DEPEND_C) -MT '_allgather.o allgather.o' $(srcdir)/allgather.c >$(DEPS_DIR)/allgather.d
	echo "include $(DEPS_DIR)/allgather.d" >>$(DEPS_DIR)/newalldeps
	$(MAKE_DEPEND_C) -MT '_allgatherv.o allgatherv.o' $(srcdir)/allgatherv.c >$(DEPS_DIR)/allgatherv.d
	echo "include $(DEPS_DIR)/allgatherv.d" >>$(DEPS_DIR)/newalldeps
	$(MAKE_DEPEND_C) -MT '_red_scat.o red_scat.o' $(srcdir)/red_scat.c >$(DEPS_DIR)/red_scat.d
	echo "include $(DEPS_DIR)/red_scat.d" >>$(DEPS_DIR)/newalldeps
	$(MAKE_DEPEND_C) -MT '_alltoallw.o alltoallw.o' $(srcdir)/alltoallw.c >$(DEPS_DIR)/alltoallw.d
	echo "include $(DEPS_DIR)/alltoallw.d" >>$(DEPS_DIR)/newalldeps
	$(MAKE_DEPEND_C) -MT '_helper_fns.o helper_fns.o' $(srcdir)/helper_fns.c >$(DEPS_DIR)/helper_fns.d
	echo "include $(DEPS_DIR)/helper_fns.d" >>$(DEPS_DIR)/newalldeps
	$(MAKE_DEPEND_C) -MT '_opsum.o opsum.o' $(srcdir)/opsum.c >$(DEPS_DIR)/opsum.d
	echo "include $(DEPS_DIR)/opsum.d" >>$(DEPS_DIR)/newalldeps
	$(MAKE_DEPEND_C) -MT '_opmax.o opmax.o' $(srcdir)/opmax.c >$(DEPS_DIR)/opmax.d
	echo "include $(DEPS_DIR)/opmax.d" >>$(DEPS_DIR)/newalldeps
	$(MAKE_DEPEND_C) -MT '_opmin.o opmin.o' $(srcdir)/opmin.c >$(DEPS_DIR)/opmin.d
	echo "include $(DEPS_DIR)/opmin.d" >>$(DEPS_DIR)/newalldeps
	$(MAKE_DEPEND_C) -MT '_opband.o opband.o' $(srcdir)/opband.c >$(DEPS_DIR)/opband.d
	echo "include $(DEPS_DIR)/opband.d" >>$(DEPS_DIR)/newalldeps
	$(MAKE_DEPEND_C) -MT '_opbor.o opbor.o' $(srcdir)/opbor.c >$(DEPS_DIR)/opbor.d
	echo "include $(DEPS_DIR)/opbor.d" >>$(DEPS_DIR)/newalldeps
	$(MAKE_DEPEND_C) -MT '_opbxor.o opbxor.o' $(srcdir)/opbxor.c >$(DEPS_DIR)/opbxor.d
	echo "include $(DEPS_DIR)/opbxor.d" >>$(DEPS_DIR)/newalldeps
	$(MAKE_DEPEND_C) -MT '_opland.o opland.o' $(srcdir)/opland.c >$(DEPS_DIR)/opland.d
	echo "include $(DEPS_DIR)/opland.d" >>$(DEPS_DIR)/newalldeps
	$(MAKE_DEPEND_C) -MT '_oplor.o oplor.o' $(srcdir)/oplor.c >$(DEPS_DIR)/oplor.d
	echo "include $(DEPS_DIR)/oplor.d" >>$(DEPS_DIR)/newalldeps
	$(MAKE_DEPEND_C) -MT '_oplxor.o oplxor.o' $(srcdir)/oplxor.c >$(DEPS_DIR)/oplxor.d
	echo "include $(DEPS_DIR)/oplxor.d" >>$(DEPS_DIR)/newalldeps
	$(MAKE_DEPEND_C) -MT '_opprod.o opprod.o' $(srcdir)/opprod.c >$(DEPS_DIR)/opprod.d
	echo "include $(DEPS_DIR)/opprod.d" >>$(DEPS_DIR)/newalldeps
	$(MAKE_DEPEND_C) -MT '_opminloc.o opminloc.o' $(srcdir)/opminloc.c >$(DEPS_DIR)/opminloc.d
	echo "include $(DEPS_DIR)/opminloc.d" >>$(DEPS_DIR)/newalldeps
	$(MAKE_DEPEND_C) -MT '_opmaxloc.o opmaxloc.o' $(srcdir)/opmaxloc.c >$(DEPS_DIR)/opmaxloc.d
	echo "include $(DEPS_DIR)/opmaxloc.d" >>$(DEPS_DIR)/newalldeps
	if [ -s $(DEPS_DIR)/newalldeps ] ; then mv -f $(DEPS_DIR)/newalldeps $(DEPS_DIR)/alldeps ; fi
	date >$(DEPS_DIR)/timestamp
include $(DEPS_DIR)/alldeps
# End of Dependencies
# --------------------------------------------------------------------------
# --------------------------------------------------------------------------
SOURCES         =  allreduce.c barrier.c op_create.c op_free.c bcast.c \
	alltoall.c alltoallv.c reduce.c scatter.c gather.c scatterv.c \
	gatherv.c scan.c exscan.c allgather.c allgatherv.c red_scat.c \
	alltoallw.c helper_fns.c opsum.c opmax.c opmin.c opband.c opbor.c \
	opbxor.c opland.c oplor.c oplxor.c opprod.c opminloc.c opmaxloc.c 
ETAGS           = @ETAGS@ @ETAGSADD@
HEADERFILES     = $(HEADERS)
SOURCEFILES     = $(SOURCES)
tags: TAGS
TAGS: Makefile${HEADERFILES} ${SOURCEFILES}
	here=`cd ../../.. && pwd` ; cd ${srcdir} && $(ETAGS) -o $$here/TAGS --append ${HEADERFILES} ${SOURCEFILES}
# --------------------------------------------------------------------------
# mpi_sources includes only the routines that are MPI function entry points
# The code for the MPI operations (e.g., MPI_SUM) is not included in 
# mpi_sources




FORCE_TARGET:

