%!PS-Adobe-2.0
%%Creator: dvips(k) 5.86 Copyright 1999 Radical Eye Software
%%Title: handle-allocator.dvi
%%Pages: 3
%%PageOrder: Ascend
%%BoundingBox: 0 0 612 792
%%DocumentFonts: Times-Roman Courier Times-Bold
%%EndComments
%DVIPSWebPage: (www.radicaleye.com)
%DVIPSCommandLine: dvips -t letter handle-allocator.dvi -o
%+ handle-allocator.ps
%DVIPSParameters: dpi=600, compressed
%DVIPSSource:  TeX output 2009.03.02:1802
%%BeginProcSet: texc.pro
%!
/TeXDict 300 dict def TeXDict begin/N{def}def/B{bind def}N/S{exch}N/X{S
N}B/A{dup}B/TR{translate}N/isls false N/vsize 11 72 mul N/hsize 8.5 72
mul N/landplus90{false}def/@rigin{isls{[0 landplus90{1 -1}{-1 1}ifelse 0
0 0]concat}if 72 Resolution div 72 VResolution div neg scale isls{
landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div hsize
mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul TR[
matrix currentmatrix{A A round sub abs 0.00001 lt{round}if}forall round
exch round exch]setmatrix}N/@landscape{/isls true N}B/@manualfeed{
statusdict/manualfeed true put}B/@copies{/#copies X}B/FMat[1 0 0 -1 0 0]
N/FBB[0 0 0 0]N/nn 0 N/IEn 0 N/ctr 0 N/df-tail{/nn 8 dict N nn begin
/FontType 3 N/FontMatrix fntrx N/FontBBox FBB N string/base X array
/BitMaps X/BuildChar{CharBuilder}N/Encoding IEn N end A{/foo setfont}2
array copy cvx N load 0 nn put/ctr 0 N[}B/sf 0 N/df{/sf 1 N/fntrx FMat N
df-tail}B/dfs{div/sf X/fntrx[sf 0 0 sf neg 0 0]N df-tail}B/E{pop nn A
definefont setfont}B/Cw{Cd A length 5 sub get}B/Ch{Cd A length 4 sub get
}B/Cx{128 Cd A length 3 sub get sub}B/Cy{Cd A length 2 sub get 127 sub}
B/Cdx{Cd A length 1 sub get}B/Ci{Cd A type/stringtype ne{ctr get/ctr ctr
1 add N}if}B/id 0 N/rw 0 N/rc 0 N/gp 0 N/cp 0 N/G 0 N/CharBuilder{save 3
1 roll S A/base get 2 index get S/BitMaps get S get/Cd X pop/ctr 0 N Cdx
0 Cx Cy Ch sub Cx Cw add Cy setcachedevice Cw Ch true[1 0 0 -1 -.1 Cx
sub Cy .1 sub]/id Ci N/rw Cw 7 add 8 idiv string N/rc 0 N/gp 0 N/cp 0 N{
rc 0 ne{rc 1 sub/rc X rw}{G}ifelse}imagemask restore}B/G{{id gp get/gp
gp 1 add N A 18 mod S 18 idiv pl S get exec}loop}B/adv{cp add/cp X}B
/chg{rw cp id gp 4 index getinterval putinterval A gp add/gp X adv}B/nd{
/cp 0 N rw exit}B/lsh{rw cp 2 copy get A 0 eq{pop 1}{A 255 eq{pop 254}{
A A add 255 and S 1 and or}ifelse}ifelse put 1 adv}B/rsh{rw cp 2 copy
get A 0 eq{pop 128}{A 255 eq{pop 127}{A 2 idiv S 128 and or}ifelse}
ifelse put 1 adv}B/clr{rw cp 2 index string putinterval adv}B/set{rw cp
fillstr 0 4 index getinterval putinterval adv}B/fillstr 18 string 0 1 17
{2 copy 255 put pop}for N/pl[{adv 1 chg}{adv 1 chg nd}{1 add chg}{1 add
chg nd}{adv lsh}{adv lsh nd}{adv rsh}{adv rsh nd}{1 add adv}{/rc X nd}{
1 add set}{1 add clr}{adv 2 chg}{adv 2 chg nd}{pop nd}]A{bind pop}
forall N/D{/cc X A type/stringtype ne{]}if nn/base get cc ctr put nn
/BitMaps get S ctr S sf 1 ne{A A length 1 sub A 2 index S get sf div put
}if put/ctr ctr 1 add N}B/I{cc 1 add D}B/bop{userdict/bop-hook known{
bop-hook}if/SI save N @rigin 0 0 moveto/V matrix currentmatrix A 1 get A
mul exch 0 get A mul add .99 lt{/QV}{/RV}ifelse load def pop pop}N/eop{
SI restore userdict/eop-hook known{eop-hook}if showpage}N/@start{
userdict/start-hook known{start-hook}if pop/VResolution X/Resolution X
1000 div/DVImag X/IEn 256 array N 2 string 0 1 255{IEn S A 360 add 36 4
index cvrs cvn put}for pop 65781.76 div/vsize X 65781.76 div/hsize X}N
/p{show}N/RMat[1 0 0 -1 0 0]N/BDot 260 string N/Rx 0 N/Ry 0 N/V{}B/RV/v{
/Ry X/Rx X V}B statusdict begin/product where{pop false[(Display)(NeXT)
(LaserWriter 16/600)]{A length product length le{A length product exch 0
exch getinterval eq{pop true exit}if}{pop}ifelse}forall}{false}ifelse
end{{gsave TR -.1 .1 TR 1 1 scale Rx Ry false RMat{BDot}imagemask
grestore}}{{gsave TR -.1 .1 TR Rx Ry scale 1 1 false RMat{BDot}
imagemask grestore}}ifelse B/QV{gsave newpath transform round exch round
exch itransform moveto Rx 0 rlineto 0 Ry neg rlineto Rx neg 0 rlineto
fill grestore}B/a{moveto}B/delta 0 N/tail{A/delta X 0 rmoveto}B/M{S p
delta add tail}B/b{S p tail}B/c{-4 M}B/d{-3 M}B/e{-2 M}B/f{-1 M}B/g{0 M}
B/h{1 M}B/i{2 M}B/j{3 M}B/k{4 M}B/w{0 rmoveto}B/l{p -4 w}B/m{p -3 w}B/n{
p -2 w}B/o{p -1 w}B/q{p 1 w}B/r{p 2 w}B/s{p 3 w}B/t{p 4 w}B/x{0 S
rmoveto}B/y{3 2 roll p a}B/bos{/SS save N}B/eos{SS restore}B end

%%EndProcSet
%%BeginProcSet: 8r.enc
% @@psencodingfile@{
%   author = "S. Rahtz, P. MacKay, Alan Jeffrey, B. Horn, K. Berry",
%   version = "0.6",
%   date = "22 June 1996",
%   filename = "8r.enc",
%   email = "kb@@mail.tug.org",
%   address = "135 Center Hill Rd. // Plymouth, MA 02360",
%   codetable = "ISO/ASCII",
%   checksum = "119     662    4424",
%   docstring = "Encoding for TrueType or Type 1 fonts to be used with TeX."
% @}
% 
% Idea is to have all the characters normally included in Type 1 fonts
% available for typesetting. This is effectively the characters in Adobe
% Standard Encoding + ISO Latin 1 + extra characters from Lucida.
% 
% Character code assignments were made as follows:
% 
% (1) the Windows ANSI characters are almost all in their Windows ANSI
% positions, because some Windows users cannot easily reencode the
% fonts, and it makes no difference on other systems. The only Windows
% ANSI characters not available are those that make no sense for
% typesetting -- rubout (127 decimal), nobreakspace (160), softhyphen
% (173). quotesingle and grave are moved just because it's such an
% irritation not having them in TeX positions.
% 
% (2) Remaining characters are assigned arbitrarily to the lower part
% of the range, avoiding 0, 10 and 13 in case we meet dumb software.
% 
% (3) Y&Y Lucida Bright includes some extra text characters; in the
% hopes that other PostScript fonts, perhaps created for public
% consumption, will include them, they are included starting at 0x12.
% 
% (4) Remaining positions left undefined are for use in (hopefully)
% upward-compatible revisions, if someday more characters are generally
% available.
% 
% (5) hyphen appears twice for compatibility with both ASCII and Windows.
% 
/TeXBase1Encoding [
% 0x00 (encoded characters from Adobe Standard not in Windows 3.1)
  /.notdef /dotaccent /fi /fl
  /fraction /hungarumlaut /Lslash /lslash
  /ogonek /ring /.notdef
  /breve /minus /.notdef 
% These are the only two remaining unencoded characters, so may as
% well include them.
  /Zcaron /zcaron 
% 0x10
 /caron /dotlessi 
% (unusual TeX characters available in, e.g., Lucida Bright)
 /dotlessj /ff /ffi /ffl 
 /.notdef /.notdef /.notdef /.notdef
 /.notdef /.notdef /.notdef /.notdef
 % very contentious; it's so painful not having quoteleft and quoteright
 % at 96 and 145 that we move the things normally found there down to here.
 /grave /quotesingle 
% 0x20 (ASCII begins)
 /space /exclam /quotedbl /numbersign
 /dollar /percent /ampersand /quoteright
 /parenleft /parenright /asterisk /plus /comma /hyphen /period /slash
% 0x30
 /zero /one /two /three /four /five /six /seven
 /eight /nine /colon /semicolon /less /equal /greater /question
% 0x40
 /at /A /B /C /D /E /F /G /H /I /J /K /L /M /N /O
% 0x50
 /P /Q /R /S /T /U /V /W
 /X /Y /Z /bracketleft /backslash /bracketright /asciicircum /underscore
% 0x60
 /quoteleft /a /b /c /d /e /f /g /h /i /j /k /l /m /n /o
% 0x70
 /p /q /r /s /t /u /v /w
 /x /y /z /braceleft /bar /braceright /asciitilde
 /.notdef % rubout; ASCII ends
% 0x80
 /.notdef /.notdef /quotesinglbase /florin
 /quotedblbase /ellipsis /dagger /daggerdbl
 /circumflex /perthousand /Scaron /guilsinglleft
 /OE /.notdef /.notdef /.notdef
% 0x90
 /.notdef /.notdef /.notdef /quotedblleft
 /quotedblright /bullet /endash /emdash
 /tilde /trademark /scaron /guilsinglright
 /oe /.notdef /.notdef /Ydieresis
% 0xA0
 /.notdef % nobreakspace
 /exclamdown /cent /sterling
 /currency /yen /brokenbar /section
 /dieresis /copyright /ordfeminine /guillemotleft
 /logicalnot
 /hyphen % Y&Y (also at 45); Windows' softhyphen
 /registered
 /macron
% 0xD0
 /degree /plusminus /twosuperior /threesuperior
 /acute /mu /paragraph /periodcentered
 /cedilla /onesuperior /ordmasculine /guillemotright
 /onequarter /onehalf /threequarters /questiondown
% 0xC0
 /Agrave /Aacute /Acircumflex /Atilde /Adieresis /Aring /AE /Ccedilla
 /Egrave /Eacute /Ecircumflex /Edieresis
 /Igrave /Iacute /Icircumflex /Idieresis
% 0xD0
 /Eth /Ntilde /Ograve /Oacute
 /Ocircumflex /Otilde /Odieresis /multiply
 /Oslash /Ugrave /Uacute /Ucircumflex
 /Udieresis /Yacute /Thorn /germandbls
% 0xE0
 /agrave /aacute /acircumflex /atilde
 /adieresis /aring /ae /ccedilla
 /egrave /eacute /ecircumflex /edieresis
 /igrave /iacute /icircumflex /idieresis
% 0xF0
 /eth /ntilde /ograve /oacute
 /ocircumflex /otilde /odieresis /divide
 /oslash /ugrave /uacute /ucircumflex
 /udieresis /yacute /thorn /ydieresis
] def

%%EndProcSet
%%BeginProcSet: texps.pro
%!
TeXDict begin/rf{findfont dup length 1 add dict begin{1 index/FID ne 2
index/UniqueID ne and{def}{pop pop}ifelse}forall[1 index 0 6 -1 roll
exec 0 exch 5 -1 roll VResolution Resolution div mul neg 0 0]/Metrics
exch def dict begin Encoding{exch dup type/integertype ne{pop pop 1 sub
dup 0 le{pop}{[}ifelse}{FontMatrix 0 get div Metrics 0 get div def}
ifelse}forall Metrics/Metrics currentdict end def[2 index currentdict
end definefont 3 -1 roll makefont/setfont cvx]cvx def}def/ObliqueSlant{
dup sin S cos div neg}B/SlantFont{4 index mul add}def/ExtendFont{3 -1
roll mul exch}def/ReEncodeFont{CharStrings rcheck{/Encoding false def
dup[exch{dup CharStrings exch known not{pop/.notdef/Encoding true def}
if}forall Encoding{]exch pop}{cleartomark}ifelse}if/Encoding exch def}
def end

%%EndProcSet
TeXDict begin 40258431 52099146 1000 600 600 (handle-allocator.dvi)
@start
%DVIPSBitmapFont: Fa cmr10 10 3
/Fa 3 62 df<146014E0EB01C0EB0380EB0700130E131E5B5BA25B485AA2485AA212075B
120F90C7FCA25A121EA2123EA35AA65AB2127CA67EA3121EA2121F7EA27F12077F1203A2
6C7EA26C7E1378A27F7F130E7FEB0380EB01C0EB00E01460135278BD20>40
D<12C07E12707E7E7E120F6C7E6C7EA26C7E6C7EA21378A2137C133C133E131EA2131F7F
A21480A3EB07C0A6EB03E0B2EB07C0A6EB0F80A31400A25B131EA2133E133C137C1378A2
5BA2485A485AA2485A48C7FC120E5A5A5A5A5A13527CBD20>I<007FB812F8B912FCA26C
17F8CCFCAE007FB812F8B912FCA26C17F836167B9F41>61 D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fb cmmi7 7 7
/Fb 7 118 df<EC03E0EC0FF0EC1E38EC3C3C157CEC7CFC1478ECF8F815701500A2495A
A590B512E0A2903803E000A4495AA5495AA649C7FCA5133EA4133C137C123CEA7C78127E
EAFC7013F0EA78E0EA71C0EA3F80001EC8FC1E357CA820>102 D<EB01F0EB07FC90381E
0CE0EB3C071378EBF003EA01E0A20003EB07C013C01207A2390F800F80A49038001F00A4
143E3807807E14FE3803C3BE6CB45AEA007C1300A25CA21238387C01F012FC495A48485A
38701F80D83FFEC7FCEA0FF01B267E9920>I<EB0FE0EB3FF8EBF83C3801E00E3803C00F
3907800780EA0F00121E123E003C14C0127C158048130FA31500485BA2143E143C5C1278
5C383C03C0381E0F80D80FFEC7FCEA03F81A1B7C9921>111 D<9038F007C03901FC1FF0
39031E78780006EBE03C90381FC01C000CEB801E14005B0018141F133E1200137E153E13
7CA213FC157C5B1578000114F0A2EC01E0EC03C03903FC07809038FE1F00EBE7FCEBE1F0
D807E0C7FCA25BA2120FA25B121FEAFFF8A22025809922>I<3807803E390FE0FF803818
F3C13930F703C0EBFE073860FC0F13F8158039C1F0070091C7FC1201A2485AA4485AA448
5AA448C8FCA2120E1A1B7D991F>114 D<131C133EA25BA45BA4485AB512E0A23801F000
485AA4485AA4485AA448C7FC1460A214C0123EEB0180EB0300EA1E06EA1F1CEA0FF8EA03
E013267EA419>116 D<EA03E0486C1338D80C78137CEA187C00305CA212605B00C0495A
A2EA01F0A24A5AEA03E0A34848485AEDC180A391380F8300A20003131F9038E037863901
F0E7CE3900FFC3FC90383F00F0211B7D9927>I E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fc cmmi10 10 13
/Fc 13 117 df<150C151E153EA2153C157CA2157815F8A215F01401A215E01403A215C0
1407A21580140FA215005CA2141E143EA2143C147CA2147814F8A25C1301A25C1303A249
5AA25C130FA291C7FC5BA2131E133EA2133C137CA2137813F8A25B1201A25B1203A25B12
07A25B120FA290C8FC5AA2121E123EA2123C127CA2127812F8A25A12601F537BBD2A>61
D<126012FCB4FCEA7FC0EA1FF0EA07FCEA01FF38007FC0EB1FF0EB07FCEB01FF9038007F
C0EC1FF0EC07FCEC01FF9138007FC0ED1FF0ED07FCED01FF9238007FC0EE1FF0EE07FCEE
01FF9338007F80EF1FC0A2EF7F80933801FF00EE07FCEE1FF0EE7FC04B48C7FCED07FCED
1FF0ED7FC04A48C8FCEC07FCEC1FF0EC7FC04948C9FCEB07FCEB1FF0EB7FC04848CAFCEA
07FCEA3FF0EA7FC048CBFC12FC1270323279AD41>I<0103B812E05BA290260007F8C712
3F4B140FF003C0140F18015DA2141FA25D1980143FA25D1760027F14E095C7FC92C75AA2
4A1301A24A495A16070101141F91B6FC94C8FCA2903903FC001F824A130EA21307A24A13
0CA2010F141CA24A90C9FCA2131FA25CA2133FA25CA2137FA291CBFC497EB612C0A33B39
7DB835>70 D<0103B5D8F803B512F8495DA290260007F8C73807F8004B5DA2020F150F61
5DA2021F151F615DA2023F153F615DA2027F157F96C7FC92C8FCA24A5D605CA249B7FC60
A202FCC7120101031503605CA201071507605CA2010F150F605CA2011F151F605CA2013F
153F605CA2017F157F95C8FC91C8FC496C4A7EB690B6FCA345397DB845>72
D<902603FFF891381FFFF8496D5CA2D90007030113006FEC007C02061678DA0EFF157081
020C6D1460A2DA1C3F15E0705CEC181F82023815016F6C5C1430150702706D1303030392
C7FC02607FA2DAE0015C701306ECC0008201016E130EEF800C5C163F0103EDC01C041F13
1891C713E0160F49EDF03818300106140717F8010E02031370EFFC60130CEE01FE011C16
E004005B011815FF177F1338600130153FA20170151F95C8FC01F081EA07FCB512E01706
A245397DB843>78 D<0003B812FEA25A903AF8003FC00101C0913880007E4848163C90C7
007F141C121E001C92C7FCA2485CA200305C007017180060130112E0485CA21403C71600
5DA21407A25DA2140FA25DA2141FA25DA2143FA25DA2147FA292C9FCA25CA25CA21301A2
5CA21303A25CEB0FFC003FB6FC5AA237397EB831>84 D<147E903803FF8090390FC1C380
90391F00EFC0017E137F49133F485A4848EB1F8012075B000F143F48481400A2485A5D00
7F147E90C7FCA215FE485C5AA214015D48150CA21403EDF01C16181407007C1538007E01
0F1330003E131F027B13706C01E113E03A0F83C0F9C03A03FF007F80D800FCEB1F002626
7DA42C>97 D<16F8ED03FEED0F8792381F0F80ED3E3F167F157CA215FC1700161C4A48C7
FCA414035DA414075DA20107B512F0A39026000FE0C7FC5DA4141F5DA4143F92C8FCA45C
147EA514FE5CA413015CA4495AA45C1307A25C121E123F387F8F80A200FF90C9FC131E12
FEEA7C3CEA7878EA1FF0EA07C0294C7CBA29>102 D<14E0EB03F8A21307A314F0EB01C0
90C7FCAB13F8EA03FEEA070F000E1380121C121812381230EA701F1260133F00E0130012
C05BEA007EA213FE5B1201A25B12035BA20007131813E01438000F133013C01470EB8060
14E014C01381EB838038078700EA03FEEA00F815397EB71D>105
D<EB0FC0EA03FF5AA2EA001F1480A2133FA21400A25BA2137EA213FEA25BA21201A25BA2
1203A25BA21207A25BA2120FA25BA2121FA25BA2123FA290C7FCA25AA2EA7E03A2EAFE07
130612FCA2130E130C131C1318EA7C38EA3C70EA1FE0EA0780123B7DB919>108
D<3903E001F83907F807FE390E3C1E07391C3E381F3A183F703F800038EBE07F0030EBC0
FF00705B00601500EC007E153CD8E07F90C7FCEAC07EA2120013FE5BA312015BA312035B
A312075BA3120F5BA3121F5B0007C9FC21267EA425>114 D<14FF010313C090380F80F0
90383E00380178131C153C4913FC0001130113E0A33903F000F06D13007F3801FFE014FC
14FF6C14806D13C0011F13E013039038003FF014071403001E1301127FA24814E0A348EB
03C012F800E0EB07800070EB0F006C133E001E13F83807FFE0000190C7FC1E267CA427>
I<EB01C0497E1307A4130F5CA3131F5CA3133F91C7FC007FB51280A2B6FCD8007EC7FCA3
13FE5BA312015BA312035BA312075BA3120FEBC006A2140E001F130CEB801C141814385C
146014E0380F81C038078780D803FEC7FCEA00F819357EB31E>I
E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fd cmsy10 10 2
/Fd 2 16 df<EB0380497EA7397803803C00FC147E00FE14FE397F8383FC393FC387F839
0FE38FE03903FBBF803900FFFE00EB3FF8EB0FE0A2EB3FF8EBFFFE3903FBBF80390FE38F
E0393FC387F8397F8383FC39FE0380FE00FC147E0078143C390007C000A76D5A1F247BA6
2A>3 D<EB1FF0EBFFFE487F000714C04814E04814F04814F8A24814FCA3B612FEA96C14
FCA36C14F8A26C14F06C14E06C14C0000114006C5BEB1FF01F1F7BA42A>15
D E
%EndDVIPSBitmapFont
/Fe 135[42 3[28 32 37 3[46 1[23 2[23 1[42 1[37 46 2[42
20[55 3[65 2[55 17[42 42 42 2[21 46[{TeXBase1Encoding ReEncodeFont}18
83.022 /Times-Bold rf /Ff 136[72 1[55 33 39 44 2[50 55
1[28 55 1[28 55 50 1[44 55 44 1[50 13[55 9[39 4[72 2[72
13[50 50 50 2[25 6[33 39[{TeXBase1Encoding ReEncodeFont}25
99.6264 /Times-Bold rf /Fg 105[42 1[37 37 24[37 42 42
60 42 42 23 32 28 42 42 42 42 65 23 42 23 23 42 42 28
37 42 37 42 37 9[78 60 1[51 46 3[60 2[51 2[28 1[60 46
1[60 55 55 60 6[23 6[42 42 42 2[21 28 21 2[28 28 28 36[46
2[{TeXBase1Encoding ReEncodeFont}53 83.022 /Times-Roman
rf /Fh 138[66 40 1[53 2[60 66 100 33 2[33 66 60 2[66
53 25[47 7[86 14[60 60 49[{TeXBase1Encoding ReEncodeFont}16
119.552 /Times-Bold rf /Fi 130[50 1[50 50 50 50 50 50
50 50 50 50 1[50 50 50 50 50 50 1[50 50 50 50 50 50 50
50 50 1[50 8[50 1[50 1[50 2[50 2[50 2[50 2[50 50 9[50
50 50 50 1[50 1[50 50 50 50 50 50 50 50 50 1[50 5[50
36[{TeXBase1Encoding ReEncodeFont}51 83.022 /Courier
rf /Fj 137[50 1[28 1[33 1[50 50 50 78 28 3[50 2[44 1[44
1[44 10[72 1[61 55 2[55 2[89 6[55 1[72 10[50 6[50 1[50
3[25 44[{TeXBase1Encoding ReEncodeFont}23 99.6264 /Times-Roman
rf /Fk 137[72 1[40 1[48 2[72 72 1[40 6[64 72 64 1[64
12[88 3[80 7[104 1[80 1[104 1[96 104 65[{TeXBase1Encoding ReEncodeFont}
17 143.462 /Times-Roman rf end
%%EndProlog
%%BeginSetup
%%Feature: *Resolution 600dpi
TeXDict begin
%%BeginPaperSize: Letter
letter
%%EndPaperSize

%%EndSetup
%%Page: 1 1
1 0 bop 1069 526 a Fk(T)-5 b(ro)n(v)n(e)34 b(DBPF)h(Handle)f(Allocator)
1427 858 y Fj(PVFS)26 b(De)n(v)o(elopment)c(T)-7 b(eam)1655
1143 y(March)25 b(2,)g(2009)42 1500 y Fi($Id:)49 b
(handle-allocator.tex,v)d(1.1)j(2003/01/24)f(23:29:18)h(pcarns)f(Exp)i
($)42 1872 y Fh(1)120 b(Intr)n(oduction)42 2149 y Fg(The)19
b(T)m(ro)o(v)o(e)e(interf)o(ace)h(gi)n(v)o(es)h(out)g(handles)f(\226)h
(unique)e(identi\002ers)i(to)g(tro)o(v)o(e)f(objects.)24
b(In)19 b(addition)e(to)j(being)e(unique,)f(handles)h(will)42
2248 y(not)i(be)f(reused)g(within)h(a)g(con\002gurable)d(amount)i(of)g
(time.)25 b(These)20 b(tw)o(o)g(constraints)f(mak)o(e)g(for)g(a)i
(handle)d(allocator)h(that)h(ends)f(up)42 2348 y(being)f(a)h(bit)g
(more)f(complicated)f(than)h(one)g(might)g(e)o(xpect.)23
b(Add)c(to)f(that)h(the)g(f)o(act)g(that)f(we)h(w)o(ant)g(to)g
(serialize)g(on)f(disk)h(all)g(or)f(part)42 2448 y(of)i(the)g(handle)g
(allocator')-5 b(s)19 b(state,)i(and)e(here)h(we)h(are)f(with)g(a)h
(document)d(to)i(e)o(xplain)f(it)i(all.)42 2777 y Ff(1.1)99
b(Data)25 b(Structur)n(es)42 3023 y Fe(1.1.1)81 b(Extents)42
3270 y Fg(W)-7 b(e)22 b(ha)n(v)o(e)d(a)i(lar)o(ge)e(handle)g(space)h
(we)h(need)e(to)i(represent)e(ef)n(\002ciently)-5 b(.)23
b(This)e(approach)d(uses)j(e)o(xtents:)42 3627 y Fi(struct)49
b(extent)g({)42 3727 y(int64_t)g(first;)42 3827 y(int64_t)g(last;)42
3926 y(};)42 4338 y Fe(1.1.2)81 b(Extent)20 b(List)42
4585 y Fg(W)-7 b(e)26 b(k)o(eep)e(the)h(e)o(xtents)f(\(not)g
(nescessarily)h(sorted\))f(in)g(the)h Fi(extents)f Fg(array)-5
b(.)37 b(F)o(or)25 b(f)o(aster)f(searches,)i Fi(index)e
Fg(k)o(eeps)h(an)f(inde)o(x)42 4685 y(into)e Fi(extents)f
Fg(in)h(an)g(A)-11 b(VL)21 b(tree.)30 b(In)22 b(addition)e(to)i(the)g
(e)o(xtents)f(themselv)o(es,)g(some)h(bookk)o(eeping)c(members)j(are)h
(added.)28 b(The)42 4785 y(most)e(important)e(is)i(the)g
Fi(timestamp)e Fg(member)m(,)h(used)g(to)h(mak)o(e)f(sure)g(no)g
(handle)g(in)g(its)i(list)f(gets)g(reused)f(before)f(it)i(should.)p
42 4884 25 4 v 72 4884 V 97 4884 a Fi(size)20 b Fg(is)h(only)f(used)g
(internally)-5 b(,)18 b(k)o(eeping)h(track)g(of)h(ho)n(w)g(big)g
Fi(extents)f Fg(is.)42 5158 y Fi(struct)49 b(extentlist)f({)42
5258 y(int64_t)h(__size;)42 5357 y(int64_t)g(num_extents;)1926
5610 y Fg(1)p eop
%%Page: 2 2
2 1 bop 42 169 a Fi(int64_t)49 b(num_handles;)42 268
y(struct)g(timeval)f(timestamp;)42 368 y(struct)h(extent)g(*)g
(extents;)42 468 y(};)42 780 y Fe(1.1.3)81 b(Handle)20
b(Ledger)42 1027 y Fg(W)-7 b(e)22 b(manage)d(se)n(v)o(eral)h(lists.)28
b(The)20 b Fi(free)p 1241 1027 25 4 v 29 w(list)h Fg(contains)f(all)h
(the)f(v)n(alid)g(handles.)26 b(The)20 b Fi(recently)p
3052 1027 V 28 w(freed)p 3330 1027 V 29 w(list)h Fg(contains)42
1127 y(handles)27 b(which)g(ha)n(v)o(e)f(been)h(freed,)h(b)n(ut)f
(possibly)g(before)f(some)h(e)o(xpire)f(time)h(has)h(passed.)46
b(The)27 b Fi(overflow)p 3421 1127 V 28 w(list)h Fg(holds)42
1226 y(freed)20 b(handles)f(while)h(items)h(on)f(the)g
Fi(recently)p 1545 1226 V 28 w(freed)p 1823 1226 V 29
w(list)g Fg(w)o(ait)h(for)f(the)g(e)o(xpire)f(time)h(to)h(pass.)42
1417 y(W)-7 b(e)24 b(sa)n(v)o(e)f(our)f(state)i(by)e(writing)g(out)h
(and)f(reading)f(from)h(the)h(three)f Fi(TROVE)p 2320
1417 V 29 w(handle)g Fg(members,)h(making)e(use)i(of)g(the)f(higher)42
1517 y(le)n(v)o(el)e(tro)o(v)o(e)f(interf)o(ace.)42 1774
y Fi(struct)49 b(handle_ledger)e({)441 1874 y(struct)h(extentlist)g
(free_list;)42 1973 y(struct)h(extentlist)f(recently_freed_list;)42
2073 y(struct)h(extentlist)f(overflow_list;)42 2173 y(FILE)h
(*backing_store;)42 2272 y(TROVE_handle)f(free_list_handle;)42
2372 y(TROVE_handle)g(recently_freed_list_handle;)42
2472 y(TROVE_handle)g(overflow_list_handle;)42 2571 y(})42
2943 y Fh(2)120 b(Algorithm)42 3236 y Ff(2.1)99 b(Assigning)25
b(handles)42 3483 y Fg(Start)c(of)n(f)e(with)i(a)f Fi(free)p
766 3483 V 29 w(list)g Fg(of)g(one)g(big)g(e)o(xtent)f(encompassing)f
(the)j(entire)e(handle)h(space.)167 3741 y Fd(\017)41
b Fg(Get)21 b(the)g(last)g(e)o(xtent)f(from)f(the)i Fi(free)p
1383 3741 V 29 w(list)g Fg(\(W)-7 b(e)21 b(hope)f(getting)f(the)i(last)
g(e)o(xtent)f(impro)o(v)o(es)f(the)i(ef)n(\002enc)o(y)e(of)h(the)h(e)o
(xtent)250 3840 y(representation\))167 4006 y Fd(\017)41
b Fg(Sa)n(v)o(e)20 b Fi(last)g Fg(for)g(later)g(return)f(to)h(the)h
(caller)167 4172 y Fd(\017)41 b Fg(Decrement)19 b Fi(last)167
4338 y Fd(\017)41 b Fg(if)20 b Fc(f)9 b(ir)r(st)23 b(>)g(l)r(ast)p
Fg(,)d(mark)f(the)h(e)o(xtent)g(as)g(empty)-5 b(.)42
4667 y Ff(2.2)99 b(r)n(etur)o(ning)27 b(handles)167 4858
y Fd(\017)41 b Fg(when)23 b(the)g(\002rst)h(handle)e(is)j(returned,)d
(it)i(gets)g(added)e(to)h(the)h Fi(recently)p 2448 4858
V 28 w(freed)f Fg(list.)36 b(Because)23 b(this)h(is)g(the)g(\002rst)g
(item)250 4958 y(on)c(that)g(list,)h(we)g(check)e(the)h(time.)167
5124 y Fd(\017)41 b Fg(no)n(w)22 b(we)i(add)e(more)g(handles)h(to)g
(the)g(list.)34 b(we)24 b(check)e(the)h(time)g(after)g
Fc(N)32 b Fg(handles)22 b(are)h(returned)e(and)i(update)f(the)h(times-)
250 5224 y(tamp.)1926 5610 y(2)p eop
%%Page: 3 3
3 2 bop 167 169 a Fd(\017)41 b Fg(Once)24 b(we)g(ha)n(v)o(e)g(added)f
Fc(H)31 b Fg(handles,)24 b(we)h(decide)e(the)h Fi(recently)p
2267 169 25 4 v 29 w(freed)g Fg(list)h(has)f(enough)e(handles.)36
b(W)-7 b(e)26 b(then)d(start)250 268 y(using)d(the)g
Fi(overflow)p 978 268 V 28 w(list)g Fg(to)g(hold)g(returned)e(handles.)
167 434 y Fd(\017)41 b Fg(as)23 b(with)g(the)g Fi(recently)p
1043 434 V 28 w(freed)g Fg(list,)h(we)f(record)f(the)g(time)h(that)g
(this)h(handle)d(w)o(as)j(added,)e(updating)f(the)h(timestamp)250
534 y(after)e(e)n(v)o(ery)f Fc(N)29 b Fg(additions.)24
b(W)-7 b(e)21 b(also)g(check)e(ho)n(w)h(old)g(the)g Fi(recently)p
2386 534 V 28 w(freed)g Fg(list)h(is.)167 700 y Fd(\017)41
b Fg(at)27 b(some)f(point)f(in)i(time,)h(the)e(whole)g
Fi(recently)p 1788 700 V 28 w(freed)g Fg(list)i(is)f(ready)e(to)i(be)f
(returned)e(to)j(the)f Fi(free)p 3434 700 V 29 w(list)p
Fg(.)43 b(The)250 800 y Fi(recently)p 655 800 V 28 w(freed)15
b Fg(list)h(is)h(mer)o(ged)c(into)i(the)g Fi(free)p 1862
800 V 29 w(list)p Fg(,)h(the)f Fi(overflow)p 2645 800
V 29 w(list)g Fg(becomes)f(the)h Fi(recently)p 3712 800
V 28 w(freed)250 899 y Fg(list)21 b(and)f(the)g Fi(overflow)p
1040 899 V 28 w(list)g Fg(is)i(empty)-5 b(.)42 1228 y
Ff(2.3)99 b(I)25 b(don't)h(kno)o(w)f(what)h(to)f(call)f(this)h(section)
42 1475 y Fg(Let)f Fc(T)226 1487 y Fb(r)287 1475 y Fg(be)g(the)g
(minimum)e(response)h(time)h(for)f(an)h(operation)d(of)j(an)o(y)f
(sort,)i Fc(T)2368 1487 y Fb(f)2434 1475 y Fg(be)f(the)g(time)g(a)g
(handle)f(must)h(sit)h(before)d(being)42 1575 y(mo)o(v)o(ed)d(back)g
(to)h(the)h(free)e(list,)i(and)f Fc(N)1172 1587 y Fb(tot)1280
1575 y Fg(be)g(the)g(total)g(number)f(of)h(handles)f(a)n(v)n(ailable)h
(on)f(a)i(serv)o(er)-5 b(.)42 1766 y(The)20 b(pathological)e(case)j(w)o
(ould)e(be)i(one)e(where)h(a)g(caller)167 2023 y Fd(\017)41
b Fg(\002lls)21 b(up)f(the)g Fi(recently)p 1026 2023
V 29 w(freed)f Fg(list)167 2189 y Fd(\017)41 b Fg(immediately)14
b(starts)i(consuming)d(handles)h(as)i(quickly)e(as)i(possible)f(to)g
(mak)o(e)g(for)g(the)g(lar)o(gest)f(possible)h Fi(recently)p
3677 2189 V 29 w(freed)250 2289 y Fg(list)21 b(in)f(the)h(ne)o(xt)e
(pass)42 2546 y(This)h(results)g(in)f(the)g(lar)o(gest)g(number)f(of)h
(handles)f(being)h(una)n(v)n(ailable)f(due)g(to)i(sitting)g(on)e(the)i
Fi(overflow)p 3213 2546 V 28 w(list)p Fg(.)25 b(Call)20
b Fc(N)3707 2558 y Fb(pur)r(g)42 2646 y Fg(the)h(number)d(of)i(handles)
f(w)o(aiting)h(in)h(\223pur)o(gatory\224)16 b(\()k(w)o(aiting)g(for)g
Fc(T)2057 2658 y Fb(f)2120 2646 y Fg(to)g(pass\))1677
2829 y Fc(N)1744 2841 y Fb(pur)r(g)1911 2829 y Fa(=)j
Fc(T)2048 2841 y Fb(f)2090 2829 y Fc(=T)2181 2841 y Fb(r)3755
2829 y Fg(\(1\))1591 3202 y Fc(F)1644 3214 y Fb(pur)r(g)1813
3202 y Fa(=)f Fc(N)1967 3214 y Fb(pur)r(g)2112 3202 y
Fc(=)-5 b(N)2216 3214 y Fb(tot)3755 3202 y Fg(\(2\))1535
3352 y Fc(F)1588 3364 y Fb(pur)r(g)1756 3352 y Fa(=)23
b Fc(T)1893 3364 y Fb(f)1935 3352 y Fc(=)p Fa(\()p Fc(T)2058
3364 y Fb(r)2113 3352 y Fd(\003)18 b Fc(N)2240 3364 y
Fb(tot)2327 3352 y Fa(\))1396 b Fg(\(3\))42 3592 y(W)-7
b(e)22 b(should)d(try)h(to)g(collect)g(statistics)i(and)e(see)g(what)h
Fc(T)1660 3604 y Fb(r)1717 3592 y Fg(and)e Fc(N)1924
3604 y Fb(pur)r(g)2089 3592 y Fg(end)h(up)g(being)f(for)h(real)g(and)f
(pathological)g(w)o(orkloads.)1926 5610 y(3)p eop
%%Trailer
end
userdict /end-hook known{end-hook}if
%%EOF
