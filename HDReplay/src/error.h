#ifndef _ERROR_H_
#define _ERROR_H_

#include <glib.h>
#include <errno.h>
#include "constant.h"


/**
 * The ErrorMode indicates the different error types that can occur to choose
 * the correct method to handle the error.
 */
enum ErrorMode{
	/**
	 * Warning generated by HDReply. 
	 */
	WARN=0, 
	/**
	 * Error generated by HDReplay. 
	 */
	ERR, 
	/**
	 * Warning caused by the operating system. 
	 */
	SYS_WARN, 
	/**
	 * Error caused by the operating system.
	 */
	SYS_ERR, 
	/**
	 * Warning caused by MPI. 
	 */
	MPI_WARN,
		/**
		 * Error caused by MPI. 
		 */
	MPI_ERR, 
};

/**
 * A enum containing the different error codes HDReplay generates and is able to
 * handle.
 */
enum ErrorCode{
	/**
	 * SUCCESS is returned if no error occurs. 
	 */
	HD_SUCCESS=0,
	/**
	 *Parsing of the comand line arguments fauls.
	 */
	HD_CLI_PARSE,
	/**
	 * TRACE_FILE_PATH is returned if no trace file path is passed to HDReplay
	 * at start up. 
	 */
  HD_TRACE_FILE_PATH,
	/**
	 * PROJECT_FILE_PATH is returned if no project file is passed to HDReplay at
	 * start up.
	 */
  HD_PROJECT_FILE_PATH,
	/**
	 * XML_PARSE is returned if an error occurs if the XML parsing of the
	 * project- or trace file fails.
	 */
  HD_XML_PARSE,
	/**
	 * PROGRAM_NAME is returned if the program name of the project file doesn't
	 * match the program name in the trace files. 
	 */
  HD_PROGRAM_NAME
};

/**
 * @brief This function handles the errors. 
 *
 * The error method handles the errors. This inlcudes the errors and the
 * warnings form the program HDReplay, errors caused by system calls and
 * errors form MPI.
 *
 * @param errorMode a enume for the diffrent error types.
 * @param errorNo The error code returned by the faild function.
 * @param fmt a format string for a custom error message and additional
 * information.
 * @param ... parameters for the format string.
 */
void error(enum ErrorMode errorMode, int errorNo, const char* fmt, ...);

/**
 * @param errorCode
 *
 * @return the error string that belongs to the errorcode.
 *
 * @brief This function returns a error string. 
 *
 * Returns a error string for a given error code that are generated by
 * HDReplay. The error string is
 * generated by g_strdup_printf, the returned gchar* must be freed by g_free
 * when its not longer needed. 
 *
 */
gchar *get_error_string(int errorCode);

/**
 * @brief This function prints a back trace.
 *
 * Prints a back trace. The program needs to compiled with "-rdynamic". 
 */
void show_stackframe();

#endif

