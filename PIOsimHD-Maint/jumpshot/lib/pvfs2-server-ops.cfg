/*
 * This file contains the mapping between server operation and operation type.
 * it may be a concatenation of pvfs2/src/proto/pvfs2-req-proto.h and pvfs2/include/pvfs2-event.h
 */
enum PVFS_server_op
{
    PVFS_SERV_INVALID = 0,
    PVFS_SERV_CREATE = 1,
    PVFS_SERV_REMOVE = 2,
    PVFS_SERV_IO = 3,
    PVFS_SERV_GETATTR = 4,
    PVFS_SERV_SETATTR = 5,
    PVFS_SERV_LOOKUP_PATH = 6,
    PVFS_SERV_CRDIRENT = 7,
    PVFS_SERV_RMDIRENT = 8,
    PVFS_SERV_CHDIRENT = 9,
    PVFS_SERV_TRUNCATE = 10,
    PVFS_SERV_MKDIR = 11,
    PVFS_SERV_READDIR = 12,
    PVFS_SERV_GETCONFIG = 13,
    PVFS_SERV_WRITE_COMPLETION = 14,
    PVFS_SERV_FLUSH = 15,
    PVFS_SERV_MGMT_SETPARAM = 16,
    PVFS_SERV_MGMT_NOOP = 17,
    PVFS_SERV_STATFS = 18,
    PVFS_SERV_PERF_UPDATE = 19,  /* not a real protocol request */
    PVFS_SERV_MGMT_PERF_MON = 20,
    PVFS_SERV_MGMT_ITERATE_HANDLES = 21,
    PVFS_SERV_MGMT_DSPACE_INFO_LIST = 22,
    PVFS_SERV_MGMT_EVENT_MON = 23,
    PVFS_SERV_MGMT_REMOVE_OBJECT = 24,
    PVFS_SERV_MGMT_REMOVE_DIRENT = 25,
    PVFS_SERV_MGMT_GET_DIRDATA_HANDLE = 26,
    PVFS_SERV_JOB_TIMER = 27,    /* not a real protocol request */
    PVFS_SERV_PROTO_ERROR = 28,
    PVFS_SERV_GETEATTR = 29,
    PVFS_SERV_SETEATTR = 30,
    PVFS_SERV_DELEATTR = 31,
    PVFS_SERV_LISTEATTR = 32,
    PVFS_SERV_SMALL_IO = 33,
    PVFS_SERV_LISTATTR = 34,
    /* leave this entry last */
    PVFS_SERV_NUM_OPS
};


/* different API levels where we can log events */
enum PVFS_event_api
{
    PVFS_EVENT_API_JOB =   (1 << 0),
    PVFS_EVENT_API_BMI =   (1 << 1),
    PVFS_EVENT_API_TROVE = (1 << 2),
    PVFS_EVENT_API_ENCODE_REQ = (1 << 3),  /* protocol request encode */
    PVFS_EVENT_API_ENCODE_RESP = (1 << 4), /* protocol response encode */
    PVFS_EVENT_API_DECODE_REQ = (1 << 5),  /* protocol request decode */
    PVFS_EVENT_API_DECODE_RESP = (1 << 6), /* protocol response decode */
    PVFS_EVENT_API_SM =    (1 << 7),        /* state machines */
    PVFS_EVENT_API_DECODE_UNEXPECTED = (1 << 8),
    PVFS_EVENT_API_FLOW = (1 << 9),
    PVFS_EVENT_API_PERFORMANCE_COUNTER = (1 << 10) /* additional stats to be stored 
                                             * like load, CPU usage, network 
                                             * etc */   
};

/* what kind of event */
enum PVFS_event_flag
{
    PVFS_EVENT_FLAG_NONE =  0,
    PVFS_EVENT_FLAG_START = (1 << 0),
    PVFS_EVENT_FLAG_END =   (1 << 1),
    PVFS_EVENT_FLAG_INVALID = (1 << 2)
};

/* kind of operation, may exist in multiple APIs */
enum PVFS_event_op
{
     PVFS_EVENT_BMI_SEND = 1,
     PVFS_EVENT_BMI_RECV = 2,
     PVFS_EVENT_FLOW = 3,
     PVFS_EVENT_TROVE_READ_AT = 4,
     PVFS_EVENT_TROVE_WRITE_AT = 5,
     PVFS_EVENT_TROVE_BSTREAM_FLUSH = 6,
     PVFS_EVENT_TROVE_KEYVAL_FLUSH = 7,
     PVFS_EVENT_TROVE_READ_LIST = 8,
     PVFS_EVENT_TROVE_WRITE_LIST = 9,
     PVFS_EVENT_TROVE_KEYVAL_READ = 10,
     PVFS_EVENT_TROVE_KEYVAL_READ_LIST = 11,
     PVFS_EVENT_TROVE_KEYVAL_WRITE = 12,
     PVFS_EVENT_TROVE_DSPACE_GETATTR = 13,
     PVFS_EVENT_TROVE_DSPACE_SETATTR = 14,
     PVFS_EVENT_TROVE_BSTREAM_RESIZE = 15,
     PVFS_EVENT_TROVE_KEYVAL_REMOVE = 16,
     PVFS_EVENT_TROVE_KEYVAL_ITERATE = 17,
     PVFS_EVENT_TROVE_KEYVAL_ITERATE_KEYS = 18,
     PVFS_EVENT_TROVE_DSPACE_ITERATE_HANDLES = 19,
     PVFS_EVENT_TROVE_DSPACE_CREATE = 20,
     PVFS_EVENT_TROVE_DSPACE_REMOVE = 21,
     PVFS_EVENT_TROVE_DSPACE_VERIFY = 22,
     PVFS_EVENT_TROVE_BSTREAM_VALIDATE = 23,
     PVFS_EVENT_TROVE_KEYVAL_VALIDATE = 24,
     PVFS_EVENT_TROVE_KEYVAL_WRITE_LIST = 25,
     PVFS_EVENT_TROVE_KEYVAL_GET_HANDLE_INFO = 26,
     PVFS_EVENT_TROVE_DSPACE_GETATTR_LIST = 27,
};
